---
source: tests/lexer_integration.rs
expression: "format!(\"{:#?}\", actual_token_types.to_owned())"
---
[
    Import,
    Id(
        "math",
    ),
    NewLine,
    Import,
    Id(
        "utils",
    ),
    Dot,
    Id(
        "logger",
    ),
    As,
    Underscore,
    NewLine,
    NewLine,
    Const,
    Id(
        "int",
    ),
    Id(
        "MAX",
    ),
    Eq,
    Int(
        100,
    ),
    NewLine,
    Auto,
    Id(
        "flt",
    ),
    Eq,
    Float(
        7.82,
    ),
    NewLine,
    Auto,
    Id(
        "message",
    ),
    Eq,
    Str(
        "Mux Parser Test",
    ),
    NewLine,
    NewLine,
    Enum,
    Id(
        "Shape",
    ),
    OpenBrace,
    Id(
        "Circle",
    ),
    OpenParen,
    Id(
        "float",
    ),
    Id(
        "radius",
    ),
    CloseParen,
    Comma,
    Id(
        "Rectangle",
    ),
    OpenParen,
    Id(
        "float",
    ),
    Id(
        "width",
    ),
    Comma,
    Id(
        "float",
    ),
    Id(
        "height",
    ),
    CloseParen,
    Comma,
    Id(
        "Square",
    ),
    OpenParen,
    Id(
        "float",
    ),
    Id(
        "size",
    ),
    CloseParen,
    CloseBrace,
    NewLine,
    NewLine,
    Interface,
    Id(
        "Drawable",
    ),
    OpenBrace,
    Func,
    Id(
        "draw",
    ),
    OpenParen,
    CloseParen,
    Returns,
    Id(
        "void",
    ),
    CloseBrace,
    NewLine,
    NewLine,
    Class,
    Id(
        "Circle",
    ),
    Is,
    Id(
        "Drawable",
    ),
    Comma,
    Id(
        "ShapeLike",
    ),
    OpenBrace,
    NewLine,
    Id(
        "float",
    ),
    Id(
        "radius",
    ),
    NewLine,
    Func,
    Id(
        "draw",
    ),
    OpenParen,
    CloseParen,
    Returns,
    Id(
        "void",
    ),
    OpenBrace,
    Id(
        "print",
    ),
    OpenParen,
    Str(
        "Circle radius=",
    ),
    Plus,
    Id(
        "radius",
    ),
    CloseParen,
    CloseBrace,
    NewLine,
    Func,
    Id(
        "area",
    ),
    OpenParen,
    CloseParen,
    Returns,
    Id(
        "float",
    ),
    OpenBrace,
    Return,
    Id(
        "pi",
    ),
    Star,
    Id(
        "radius",
    ),
    Star,
    Id(
        "radius",
    ),
    CloseBrace,
    NewLine,
    Func,
    Id(
        "resize",
    ),
    OpenParen,
    Id(
        "float",
    ),
    Id(
        "newRadius",
    ),
    Comma,
    Id(
        "string",
    ),
    Underscore,
    CloseParen,
    Returns,
    Id(
        "void",
    ),
    OpenBrace,
    Id(
        "radius",
    ),
    Eq,
    Id(
        "newRadius",
    ),
    CloseBrace,
    NewLine,
    CloseBrace,
    NewLine,
    NewLine,
    Func,
    Id(
        "max",
    ),
    OpenBracket,
    Id(
        "T",
    ),
    Id(
        "comparable",
    ),
    CloseBracket,
    OpenParen,
    Id(
        "T",
    ),
    Id(
        "a",
    ),
    Comma,
    Id(
        "T",
    ),
    Id(
        "b",
    ),
    CloseParen,
    Returns,
    Id(
        "T",
    ),
    OpenBrace,
    If,
    Id(
        "a",
    ),
    Gt,
    Id(
        "b",
    ),
    OpenBrace,
    Return,
    Id(
        "a",
    ),
    CloseBrace,
    Return,
    Id(
        "b",
    ),
    CloseBrace,
    NewLine,
    Class,
    Id(
        "Stack",
    ),
    OpenBracket,
    Id(
        "T",
    ),
    CloseBracket,
    OpenBrace,
    NewLine,
    Id(
        "list",
    ),
    Lt,
    Id(
        "T",
    ),
    Gt,
    Id(
        "items",
    ),
    NewLine,
    Func,
    Id(
        "push",
    ),
    OpenParen,
    Id(
        "T",
    ),
    Id(
        "item",
    ),
    CloseParen,
    Returns,
    Id(
        "void",
    ),
    OpenBrace,
    Id(
        "items",
    ),
    Dot,
    Id(
        "append",
    ),
    OpenParen,
    Id(
        "item",
    ),
    CloseParen,
    CloseBrace,
    NewLine,
    Func,
    Id(
        "pop",
    ),
    OpenParen,
    CloseParen,
    Returns,
    Id(
        "Optional",
    ),
    Lt,
    Id(
        "T",
    ),
    Gt,
    OpenBrace,
    NewLine,
    If,
    Id(
        "items",
    ),
    Dot,
    Id(
        "isEmpty",
    ),
    OpenParen,
    CloseParen,
    OpenBrace,
    Return,
    Id(
        "None",
    ),
    CloseBrace,
    NewLine,
    Return,
    Id(
        "Some",
    ),
    OpenParen,
    Id(
        "items",
    ),
    Dot,
    Id(
        "removeLast",
    ),
    OpenParen,
    CloseParen,
    CloseParen,
    NewLine,
    CloseBrace,
    NewLine,
    CloseBrace,
    NewLine,
    NewLine,
    Func,
    Id(
        "divide",
    ),
    OpenParen,
    Id(
        "int",
    ),
    Id(
        "a",
    ),
    Comma,
    Id(
        "int",
    ),
    Id(
        "b",
    ),
    CloseParen,
    Returns,
    Id(
        "Result",
    ),
    Lt,
    Id(
        "int",
    ),
    Comma,
    Id(
        "string",
    ),
    Gt,
    OpenBrace,
    NewLine,
    If,
    Id(
        "b",
    ),
    EqEq,
    Int(
        0,
    ),
    OpenBrace,
    Return,
    Id(
        "Err",
    ),
    OpenParen,
    Str(
        "Division by zero",
    ),
    CloseParen,
    CloseBrace,
    NewLine,
    Return,
    Id(
        "Ok",
    ),
    OpenParen,
    Id(
        "a",
    ),
    Slash,
    Id(
        "b",
    ),
    CloseParen,
    NewLine,
    CloseBrace,
    NewLine,
    Func,
    Id(
        "findEven",
    ),
    OpenParen,
    Id(
        "list",
    ),
    Lt,
    Id(
        "int",
    ),
    Gt,
    Id(
        "nums",
    ),
    CloseParen,
    Returns,
    Id(
        "Optional",
    ),
    Lt,
    Id(
        "int",
    ),
    Gt,
    OpenBrace,
    NewLine,
    For,
    Id(
        "n",
    ),
    In,
    Id(
        "nums",
    ),
    OpenBrace,
    If,
    Id(
        "n",
    ),
    Percent,
    Int(
        2,
    ),
    EqEq,
    Int(
        0,
    ),
    OpenBrace,
    Return,
    Id(
        "Some",
    ),
    OpenParen,
    Id(
        "n",
    ),
    CloseParen,
    CloseBrace,
    CloseBrace,
    NewLine,
    CloseBrace,
    NewLine,
    NewLine,
    Func,
    Id(
        "map",
    ),
    OpenBracket,
    Id(
        "T",
    ),
    Comma,
    Id(
        "U",
    ),
    CloseBracket,
    OpenParen,
    Id(
        "list",
    ),
    Lt,
    Id(
        "T",
    ),
    Gt,
    Id(
        "items",
    ),
    Comma,
    Func,
    OpenParen,
    Id(
        "T",
    ),
    CloseParen,
    Returns,
    Id(
        "U",
    ),
    Id(
        "transform",
    ),
    CloseParen,
    Returns,
    Id(
        "list",
    ),
    Lt,
    Id(
        "U",
    ),
    Gt,
    OpenBrace,
    NewLine,
    Auto,
    Id(
        "out",
    ),
    Eq,
    Id(
        "list",
    ),
    Lt,
    Id(
        "U",
    ),
    Gt,
    OpenParen,
    CloseParen,
    NewLine,
    For,
    Id(
        "item",
    ),
    In,
    Id(
        "items",
    ),
    OpenBrace,
    Id(
        "out",
    ),
    Dot,
    Id(
        "append",
    ),
    OpenParen,
    Id(
        "transform",
    ),
    OpenParen,
    Id(
        "item",
    ),
    CloseParen,
    CloseParen,
    CloseBrace,
    NewLine,
    Return,
    Id(
        "out",
    ),
    NewLine,
    CloseBrace,
    NewLine,
    NewLine,
    Func,
    Id(
        "main",
    ),
    OpenParen,
    CloseParen,
    Returns,
    Id(
        "void",
    ),
    OpenBrace,
    NewLine,
    Auto,
    Id(
        "explicit",
    ),
    Eq,
    Int(
        10,
    ),
    NewLine,
    Auto,
    Id(
        "inferred",
    ),
    Eq,
    Int(
        42,
    ),
    NewLine,
    Auto,
    Id(
        "floatVal",
    ),
    Eq,
    Float(
        9.4,
    ),
    NewLine,
    Auto,
    OpenParen,
    Id(
        "a",
    ),
    Comma,
    Underscore,
    CloseParen,
    Eq,
    OpenParen,
    Int(
        1,
    ),
    Comma,
    Int(
        2,
    ),
    CloseParen,
    NewLine,
    NewLine,
    If,
    Id(
        "inferred",
    ),
    Gt,
    Int(
        40,
    ),
    OpenBrace,
    Id(
        "print",
    ),
    OpenParen,
    Str(
        "Big number",
    ),
    CloseParen,
    CloseBrace,
    Else,
    OpenBrace,
    Id(
        "print",
    ),
    OpenParen,
    Str(
        "Small number",
    ),
    CloseParen,
    CloseBrace,
    NewLine,
    NewLine,
    Auto,
    Id(
        "maybeNum",
    ),
    Eq,
    Id(
        "Some",
    ),
    OpenParen,
    Int(
        15,
    ),
    CloseParen,
    NewLine,
    Match,
    Id(
        "maybeNum",
    ),
    OpenBrace,
    NewLine,
    Id(
        "Some",
    ),
    OpenParen,
    Id(
        "v",
    ),
    CloseParen,
    If,
    Id(
        "v",
    ),
    Gt,
    Int(
        10,
    ),
    OpenBrace,
    Id(
        "print",
    ),
    OpenParen,
    Str(
        "Large value: ",
    ),
    Plus,
    Id(
        "v",
    ),
    CloseParen,
    CloseBrace,
    NewLine,
    Id(
        "Some",
    ),
    OpenParen,
    Id(
        "v",
    ),
    CloseParen,
    OpenBrace,
    Id(
        "print",
    ),
    OpenParen,
    Str(
        "Small value: ",
    ),
    Plus,
    Id(
        "v",
    ),
    CloseParen,
    CloseBrace,
    NewLine,
    Id(
        "None",
    ),
    OpenBrace,
    Id(
        "print",
    ),
    OpenParen,
    Str(
        "No value",
    ),
    CloseParen,
    CloseBrace,
    NewLine,
    Underscore,
    OpenBrace,
    Id(
        "print",
    ),
    OpenParen,
    Str(
        "Unexpected",
    ),
    CloseParen,
    CloseBrace,
    NewLine,
    CloseBrace,
    NewLine,
    NewLine,
    Auto,
    Id(
        "nums",
    ),
    Eq,
    OpenBracket,
    Int(
        1,
    ),
    Comma,
    Int(
        2,
    ),
    Comma,
    Int(
        3,
    ),
    CloseBracket,
    NewLine,
    Auto,
    Id(
        "shapes",
    ),
    Eq,
    OpenBracket,
    Id(
        "Circle",
    ),
    OpenParen,
    Float(
        2.0,
    ),
    CloseParen,
    Comma,
    Id(
        "Circle",
    ),
    OpenParen,
    Float(
        3.5,
    ),
    CloseParen,
    CloseBracket,
    NewLine,
    For,
    Id(
        "shape",
    ),
    In,
    Id(
        "shapes",
    ),
    OpenBrace,
    Id(
        "shape",
    ),
    Dot,
    Id(
        "draw",
    ),
    OpenParen,
    CloseParen,
    CloseBrace,
    NewLine,
    NewLine,
    Auto,
    Id(
        "maximum",
    ),
    Eq,
    Id(
        "max",
    ),
    OpenParen,
    Int(
        7,
    ),
    Comma,
    Int(
        12,
    ),
    CloseParen,
    NewLine,
    Auto,
    Id(
        "stack",
    ),
    Eq,
    Id(
        "Stack",
    ),
    Lt,
    Id(
        "int",
    ),
    Gt,
    OpenParen,
    CloseParen,
    NewLine,
    Id(
        "stack",
    ),
    Dot,
    Id(
        "push",
    ),
    OpenParen,
    Int(
        99,
    ),
    CloseParen,
    NewLine,
    Auto,
    Id(
        "popped",
    ),
    Eq,
    Id(
        "stack",
    ),
    Dot,
    Id(
        "pop",
    ),
    OpenParen,
    CloseParen,
    NewLine,
    NewLine,
    Auto,
    Id(
        "res",
    ),
    Eq,
    Id(
        "divide",
    ),
    OpenParen,
    Int(
        10,
    ),
    Comma,
    Int(
        2,
    ),
    CloseParen,
    NewLine,
    Match,
    Id(
        "res",
    ),
    OpenBrace,
    Id(
        "Ok",
    ),
    OpenParen,
    Id(
        "v",
    ),
    CloseParen,
    OpenBrace,
    Id(
        "print",
    ),
    OpenParen,
    Id(
        "v",
    ),
    CloseParen,
    CloseBrace,
    Id(
        "Err",
    ),
    OpenParen,
    Id(
        "e",
    ),
    CloseParen,
    OpenBrace,
    Id(
        "print",
    ),
    OpenParen,
    Id(
        "e",
    ),
    CloseParen,
    CloseBrace,
    CloseBrace,
    NewLine,
    NewLine,
    Auto,
    Id(
        "maybeEven",
    ),
    Eq,
    Id(
        "findEven",
    ),
    OpenParen,
    OpenBracket,
    Int(
        1,
    ),
    Comma,
    Int(
        3,
    ),
    Comma,
    Int(
        4,
    ),
    Comma,
    Int(
        7,
    ),
    CloseBracket,
    CloseParen,
    NewLine,
    Match,
    Id(
        "maybeEven",
    ),
    OpenBrace,
    Id(
        "Some",
    ),
    OpenParen,
    Id(
        "v",
    ),
    CloseParen,
    OpenBrace,
    Id(
        "print",
    ),
    OpenParen,
    Id(
        "v",
    ),
    CloseParen,
    CloseBrace,
    Id(
        "None",
    ),
    OpenBrace,
    Id(
        "print",
    ),
    OpenParen,
    Str(
        "None",
    ),
    CloseParen,
    CloseBrace,
    CloseBrace,
    NewLine,
    NewLine,
    Auto,
    Id(
        "square",
    ),
    Eq,
    Func,
    OpenParen,
    Id(
        "int",
    ),
    Id(
        "n",
    ),
    CloseParen,
    OpenBrace,
    Return,
    Id(
        "n",
    ),
    Star,
    Id(
        "n",
    ),
    CloseBrace,
    NewLine,
    Auto,
    Id(
        "doubled",
    ),
    Eq,
    Id(
        "map",
    ),
    OpenParen,
    OpenBracket,
    Int(
        1,
    ),
    Comma,
    Int(
        2,
    ),
    Comma,
    Int(
        3,
    ),
    CloseBracket,
    Comma,
    Func,
    OpenParen,
    Auto,
    Id(
        "x",
    ),
    CloseParen,
    OpenBrace,
    Return,
    Id(
        "x",
    ),
    Star,
    Int(
        2,
    ),
    CloseBrace,
    CloseParen,
    NewLine,
    Auto,
    Id(
        "squared",
    ),
    Eq,
    Id(
        "map",
    ),
    OpenParen,
    OpenBracket,
    Int(
        1,
    ),
    Comma,
    Int(
        2,
    ),
    Comma,
    Int(
        3,
    ),
    CloseBracket,
    Comma,
    Id(
        "square",
    ),
    CloseParen,
    NewLine,
    NewLine,
    Id(
        "int",
    ),
    Id(
        "val",
    ),
    Eq,
    Int(
        10,
    ),
    NewLine,
    Auto,
    Id(
        "p",
    ),
    Eq,
    Ampersand,
    Id(
        "val",
    ),
    NewLine,
    Star,
    Id(
        "p",
    ),
    Eq,
    Int(
        20,
    ),
    NewLine,
    CloseBrace,
    NewLine,
]
