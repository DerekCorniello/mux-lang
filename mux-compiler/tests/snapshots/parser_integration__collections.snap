---
source: tests/parser_integration.rs
expression: ast_string
---
"Statement(\n    StatementNode {\n        kind: AutoDecl(\n            \"nums\",\n            TypeNode {\n                kind: Auto,\n                span: Span {\n                    row_start: 2,\n                    row_end: Some(\n                        2,\n                    ),\n                    col_start: 6,\n                    col_end: Some(\n                        10,\n                    ),\n                },\n            },\n            ExpressionNode {\n                kind: ListLiteral(\n                    [\n                        ExpressionNode {\n                            kind: Literal(\n                                Integer(\n                                    1,\n                                ),\n                            ),\n                            span: Span {\n                                row_start: 2,\n                                row_end: Some(\n                                    2,\n                                ),\n                                col_start: 14,\n                                col_end: Some(\n                                    15,\n                                ),\n                            },\n                        },\n                        ExpressionNode {\n                            kind: Literal(\n                                Integer(\n                                    2,\n                                ),\n                            ),\n                            span: Span {\n                                row_start: 2,\n                                row_end: Some(\n                                    2,\n                                ),\n                                col_start: 17,\n                                col_end: Some(\n                                    18,\n                                ),\n                            },\n                        },\n                        ExpressionNode {\n                            kind: Literal(\n                                Integer(\n                                    3,\n                                ),\n                            ),\n                            span: Span {\n                                row_start: 2,\n                                row_end: Some(\n                                    2,\n                                ),\n                                col_start: 20,\n                                col_end: Some(\n                                    21,\n                                ),\n                            },\n                        },\n                        ExpressionNode {\n                            kind: Literal(\n                                Integer(\n                                    4,\n                                ),\n                            ),\n                            span: Span {\n                                row_start: 2,\n                                row_end: Some(\n                                    2,\n                                ),\n                                col_start: 23,\n                                col_end: Some(\n                                    24,\n                                ),\n                            },\n                        },\n                    ],\n                ),\n                span: Span {\n                    row_start: 2,\n                    row_end: None,\n                    col_start: 13,\n                    col_end: None,\n                },\n            },\n        ),\n        span: Span {\n            row_start: 2,\n            row_end: Some(\n                2,\n            ),\n            col_start: 1,\n            col_end: Some(\n                5,\n            ),\n        },\n    },\n)\n\nStatement(\n    StatementNode {\n        kind: AutoDecl(\n            \"scores\",\n            TypeNode {\n                kind: Auto,\n                span: Span {\n                    row_start: 3,\n                    row_end: Some(\n                        3,\n                    ),\n                    col_start: 6,\n                    col_end: Some(\n                        12,\n                    ),\n                },\n            },\n            ExpressionNode {\n                kind: MapLiteral {\n                    key_type: TypeNode {\n                        kind: Auto,\n                        span: Span {\n                            row_start: 3,\n                            row_end: None,\n                            col_start: 15,\n                            col_end: None,\n                        },\n                    },\n                    value_type: TypeNode {\n                        kind: Auto,\n                        span: Span {\n                            row_start: 3,\n                            row_end: None,\n                            col_start: 15,\n                            col_end: None,\n                        },\n                    },\n                    entries: [\n                        (\n                            ExpressionNode {\n                                kind: Literal(\n                                    String(\n                                        \"Alice\",\n                                    ),\n                                ),\n                                span: Span {\n                                    row_start: 3,\n                                    row_end: Some(\n                                        3,\n                                    ),\n                                    col_start: 16,\n                                    col_end: Some(\n                                        23,\n                                    ),\n                                },\n                            },\n                            ExpressionNode {\n                                kind: Literal(\n                                    Integer(\n                                        90,\n                                    ),\n                                ),\n                                span: Span {\n                                    row_start: 3,\n                                    row_end: Some(\n                                        3,\n                                    ),\n                                    col_start: 25,\n                                    col_end: Some(\n                                        27,\n                                    ),\n                                },\n                            },\n                        ),\n                        (\n                            ExpressionNode {\n                                kind: Literal(\n                                    String(\n                                        \"Bob\",\n                                    ),\n                                ),\n                                span: Span {\n                                    row_start: 3,\n                                    row_end: Some(\n                                        3,\n                                    ),\n                                    col_start: 29,\n                                    col_end: Some(\n                                        34,\n                                    ),\n                                },\n                            },\n                            ExpressionNode {\n                                kind: Literal(\n                                    Integer(\n                                        85,\n                                    ),\n                                ),\n                                span: Span {\n                                    row_start: 3,\n                                    row_end: Some(\n                                        3,\n                                    ),\n                                    col_start: 36,\n                                    col_end: Some(\n                                        38,\n                                    ),\n                                },\n                            },\n                        ),\n                    ],\n                },\n                span: Span {\n                    row_start: 3,\n                    row_end: None,\n                    col_start: 15,\n                    col_end: None,\n                },\n            },\n        ),\n        span: Span {\n            row_start: 3,\n            row_end: Some(\n                3,\n            ),\n            col_start: 1,\n            col_end: Some(\n                5,\n            ),\n        },\n    },\n)\n\nStatement(\n    StatementNode {\n        kind: AutoDecl(\n            \"matrix\",\n            TypeNode {\n                kind: Auto,\n                span: Span {\n                    row_start: 4,\n                    row_end: Some(\n                        4,\n                    ),\n                    col_start: 6,\n                    col_end: Some(\n                        12,\n                    ),\n                },\n            },\n            ExpressionNode {\n                kind: ListLiteral(\n                    [\n                        ExpressionNode {\n                            kind: ListLiteral(\n                                [\n                                    ExpressionNode {\n                                        kind: Literal(\n                                            Integer(\n                                                1,\n                                            ),\n                                        ),\n                                        span: Span {\n                                            row_start: 4,\n                                            row_end: Some(\n                                                4,\n                                            ),\n                                            col_start: 17,\n                                            col_end: Some(\n                                                18,\n                                            ),\n                                        },\n                                    },\n                                    ExpressionNode {\n                                        kind: Literal(\n                                            Integer(\n                                                2,\n                                            ),\n                                        ),\n                                        span: Span {\n                                            row_start: 4,\n                                            row_end: Some(\n                                                4,\n                                            ),\n                                            col_start: 20,\n                                            col_end: Some(\n                                                21,\n                                            ),\n                                        },\n                                    },\n                                ],\n                            ),\n                            span: Span {\n                                row_start: 4,\n                                row_end: None,\n                                col_start: 16,\n                                col_end: None,\n                            },\n                        },\n                        ExpressionNode {\n                            kind: ListLiteral(\n                                [\n                                    ExpressionNode {\n                                        kind: Literal(\n                                            Integer(\n                                                3,\n                                            ),\n                                        ),\n                                        span: Span {\n                                            row_start: 4,\n                                            row_end: Some(\n                                                4,\n                                            ),\n                                            col_start: 25,\n                                            col_end: Some(\n                                                26,\n                                            ),\n                                        },\n                                    },\n                                    ExpressionNode {\n                                        kind: Literal(\n                                            Integer(\n                                                4,\n                                            ),\n                                        ),\n                                        span: Span {\n                                            row_start: 4,\n                                            row_end: Some(\n                                                4,\n                                            ),\n                                            col_start: 28,\n                                            col_end: Some(\n                                                29,\n                                            ),\n                                        },\n                                    },\n                                ],\n                            ),\n                            span: Span {\n                                row_start: 4,\n                                row_end: None,\n                                col_start: 24,\n                                col_end: None,\n                            },\n                        },\n                    ],\n                ),\n                span: Span {\n                    row_start: 4,\n                    row_end: None,\n                    col_start: 15,\n                    col_end: None,\n                },\n            },\n        ),\n        span: Span {\n            row_start: 4,\n            row_end: Some(\n                4,\n            ),\n            col_start: 1,\n            col_end: Some(\n                5,\n            ),\n        },\n    },\n)\n\nStatement(\n    StatementNode {\n        kind: TypedDecl(\n            \"avgs\",\n            TypeNode {\n                kind: Map(\n                    TypeNode {\n                        kind: Primitive(\n                            Str,\n                        ),\n                        span: Span {\n                            row_start: 6,\n                            row_end: Some(\n                                6,\n                            ),\n                            col_start: 5,\n                            col_end: Some(\n                                11,\n                            ),\n                        },\n                    },\n                    TypeNode {\n                        kind: Primitive(\n                            Int,\n                        ),\n                        span: Span {\n                            row_start: 6,\n                            row_end: Some(\n                                6,\n                            ),\n                            col_start: 13,\n                            col_end: Some(\n                                16,\n                            ),\n                        },\n                    },\n                ),\n                span: Span {\n                    row_start: 6,\n                    row_end: Some(\n                        6,\n                    ),\n                    col_start: 1,\n                    col_end: Some(\n                        4,\n                    ),\n                },\n            },\n            ExpressionNode {\n                kind: MapLiteral {\n                    key_type: TypeNode {\n                        kind: Auto,\n                        span: Span {\n                            row_start: 6,\n                            row_end: None,\n                            col_start: 25,\n                            col_end: None,\n                        },\n                    },\n                    value_type: TypeNode {\n                        kind: Auto,\n                        span: Span {\n                            row_start: 6,\n                            row_end: None,\n                            col_start: 25,\n                            col_end: None,\n                        },\n                    },\n                    entries: [\n                        (\n                            ExpressionNode {\n                                kind: Literal(\n                                    String(\n                                        \"Alice\",\n                                    ),\n                                ),\n                                span: Span {\n                                    row_start: 6,\n                                    row_end: Some(\n                                        6,\n                                    ),\n                                    col_start: 26,\n                                    col_end: Some(\n                                        33,\n                                    ),\n                                },\n                            },\n                            ExpressionNode {\n                                kind: Literal(\n                                    Integer(\n                                        90,\n                                    ),\n                                ),\n                                span: Span {\n                                    row_start: 6,\n                                    row_end: Some(\n                                        6,\n                                    ),\n                                    col_start: 35,\n                                    col_end: Some(\n                                        37,\n                                    ),\n                                },\n                            },\n                        ),\n                        (\n                            ExpressionNode {\n                                kind: Literal(\n                                    String(\n                                        \"Bob\",\n                                    ),\n                                ),\n                                span: Span {\n                                    row_start: 6,\n                                    row_end: Some(\n                                        6,\n                                    ),\n                                    col_start: 39,\n                                    col_end: Some(\n                                        44,\n                                    ),\n                                },\n                            },\n                            ExpressionNode {\n                                kind: Literal(\n                                    Integer(\n                                        85,\n                                    ),\n                                ),\n                                span: Span {\n                                    row_start: 6,\n                                    row_end: Some(\n                                        6,\n                                    ),\n                                    col_start: 46,\n                                    col_end: Some(\n                                        48,\n                                    ),\n                                },\n                            },\n                        ),\n                    ],\n                },\n                span: Span {\n                    row_start: 6,\n                    row_end: None,\n                    col_start: 25,\n                    col_end: None,\n                },\n            },\n        ),\n        span: Span {\n            row_start: 6,\n            row_end: Some(\n                6,\n            ),\n            col_start: 1,\n            col_end: Some(\n                4,\n            ),\n        },\n    },\n)\n\nStatement(\n    StatementNode {\n        kind: TypedDecl(\n            \"grid\",\n            TypeNode {\n                kind: List(\n                    TypeNode {\n                        kind: List(\n                            TypeNode {\n                                kind: Primitive(\n                                    Int,\n                                ),\n                                span: Span {\n                                    row_start: 7,\n                                    row_end: Some(\n                                        7,\n                                    ),\n                                    col_start: 11,\n                                    col_end: Some(\n                                        14,\n                                    ),\n                                },\n                            },\n                        ),\n                        span: Span {\n                            row_start: 7,\n                            row_end: Some(\n                                7,\n                            ),\n                            col_start: 6,\n                            col_end: Some(\n                                10,\n                            ),\n                        },\n                    },\n                ),\n                span: Span {\n                    row_start: 7,\n                    row_end: Some(\n                        7,\n                    ),\n                    col_start: 1,\n                    col_end: Some(\n                        5,\n                    ),\n                },\n            },\n            ExpressionNode {\n                kind: ListLiteral(\n                    [\n                        ExpressionNode {\n                            kind: ListLiteral(\n                                [\n                                    ExpressionNode {\n                                        kind: Literal(\n                                            Integer(\n                                                1,\n                                            ),\n                                        ),\n                                        span: Span {\n                                            row_start: 7,\n                                            row_end: Some(\n                                                7,\n                                            ),\n                                            col_start: 26,\n                                            col_end: Some(\n                                                27,\n                                            ),\n                                        },\n                                    },\n                                    ExpressionNode {\n                                        kind: Literal(\n                                            Integer(\n                                                2,\n                                            ),\n                                        ),\n                                        span: Span {\n                                            row_start: 7,\n                                            row_end: Some(\n                                                7,\n                                            ),\n                                            col_start: 29,\n                                            col_end: Some(\n                                                30,\n                                            ),\n                                        },\n                                    },\n                                ],\n                            ),\n                            span: Span {\n                                row_start: 7,\n                                row_end: None,\n                                col_start: 25,\n                                col_end: None,\n                            },\n                        },\n                        ExpressionNode {\n                            kind: ListLiteral(\n                                [\n                                    ExpressionNode {\n                                        kind: Literal(\n                                            Integer(\n                                                3,\n                                            ),\n                                        ),\n                                        span: Span {\n                                            row_start: 7,\n                                            row_end: Some(\n                                                7,\n                                            ),\n                                            col_start: 34,\n                                            col_end: Some(\n                                                35,\n                                            ),\n                                        },\n                                    },\n                                    ExpressionNode {\n                                        kind: Literal(\n                                            Integer(\n                                                4,\n                                            ),\n                                        ),\n                                        span: Span {\n                                            row_start: 7,\n                                            row_end: Some(\n                                                7,\n                                            ),\n                                            col_start: 37,\n                                            col_end: Some(\n                                                38,\n                                            ),\n                                        },\n                                    },\n                                ],\n                            ),\n                            span: Span {\n                                row_start: 7,\n                                row_end: None,\n                                col_start: 33,\n                                col_end: None,\n                            },\n                        },\n                    ],\n                ),\n                span: Span {\n                    row_start: 7,\n                    row_end: None,\n                    col_start: 24,\n                    col_end: None,\n                },\n            },\n        ),\n        span: Span {\n            row_start: 7,\n            row_end: Some(\n                7,\n            ),\n            col_start: 1,\n            col_end: Some(\n                5,\n            ),\n        },\n    },\n)\n\nStatement(\n    StatementNode {\n        kind: TypedDecl(\n            \"myset\",\n            TypeNode {\n                kind: Set(\n                    TypeNode {\n                        kind: Primitive(\n                            Int,\n                        ),\n                        span: Span {\n                            row_start: 8,\n                            row_end: Some(\n                                8,\n                            ),\n                            col_start: 5,\n                            col_end: Some(\n                                8,\n                            ),\n                        },\n                    },\n                ),\n                span: Span {\n                    row_start: 8,\n                    row_end: Some(\n                        8,\n                    ),\n                    col_start: 1,\n                    col_end: Some(\n                        4,\n                    ),\n                },\n            },\n            ExpressionNode {\n                kind: SetLiteral(\n                    [\n                        ExpressionNode {\n                            kind: Literal(\n                                Integer(\n                                    1,\n                                ),\n                            ),\n                            span: Span {\n                                row_start: 8,\n                                row_end: Some(\n                                    8,\n                                ),\n                                col_start: 19,\n                                col_end: Some(\n                                    20,\n                                ),\n                            },\n                        },\n                        ExpressionNode {\n                            kind: Literal(\n                                Integer(\n                                    2,\n                                ),\n                            ),\n                            span: Span {\n                                row_start: 8,\n                                row_end: Some(\n                                    8,\n                                ),\n                                col_start: 22,\n                                col_end: Some(\n                                    23,\n                                ),\n                            },\n                        },\n                        ExpressionNode {\n                            kind: Literal(\n                                Integer(\n                                    4,\n                                ),\n                            ),\n                            span: Span {\n                                row_start: 8,\n                                row_end: Some(\n                                    8,\n                                ),\n                                col_start: 25,\n                                col_end: Some(\n                                    26,\n                                ),\n                            },\n                        },\n                    ],\n                ),\n                span: Span {\n                    row_start: 8,\n                    row_end: None,\n                    col_start: 18,\n                    col_end: None,\n                },\n            },\n        ),\n        span: Span {\n            row_start: 8,\n            row_end: Some(\n                8,\n            ),\n            col_start: 1,\n            col_end: Some(\n                4,\n            ),\n        },\n    },\n)\n\n"
