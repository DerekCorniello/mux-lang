---
source: mux-compiler/tests/parser_integration.rs
assertion_line: 83
expression: ast_string
---
"Function(\n    FunctionNode {\n        name: \"even\",\n        type_params: [],\n        params: [\n            Param {\n                name: \"n\",\n                type_: TypeNode {\n                    kind: Primitive(\n                        Int,\n                    ),\n                    span: Span {\n                        row_start: 2,\n                        row_end: Some(\n                            2,\n                        ),\n                        col_start: 9,\n                        col_end: Some(\n                            12,\n                        ),\n                    },\n                },\n            },\n        ],\n        return_type: TypeNode {\n            kind: Primitive(\n                Bool,\n            ),\n            span: Span {\n                row_start: 2,\n                row_end: Some(\n                    2,\n                ),\n                col_start: 24,\n                col_end: Some(\n                    28,\n                ),\n            },\n        },\n        body: [\n            StatementNode {\n                kind: If {\n                    cond: ExpressionNode {\n                        kind: Binary {\n                            left: ExpressionNode {\n                                kind: Identifier(\n                                    \"n\",\n                                ),\n                                span: Span {\n                                    row_start: 3,\n                                    row_end: Some(\n                                        3,\n                                    ),\n                                    col_start: 8,\n                                    col_end: Some(\n                                        9,\n                                    ),\n                                },\n                            },\n                            op: Equal,\n                            right: ExpressionNode {\n                                kind: Literal(\n                                    Integer(\n                                        0,\n                                    ),\n                                ),\n                                span: Span {\n                                    row_start: 3,\n                                    row_end: Some(\n                                        3,\n                                    ),\n                                    col_start: 13,\n                                    col_end: Some(\n                                        14,\n                                    ),\n                                },\n                            },\n                        },\n                        span: Span {\n                            row_start: 3,\n                            row_end: Some(\n                                3,\n                            ),\n                            col_start: 8,\n                            col_end: Some(\n                                14,\n                            ),\n                        },\n                    },\n                    then_block: [\n                        StatementNode {\n                            kind: Return(\n                                Some(\n                                    ExpressionNode {\n                                        kind: Literal(\n                                            Boolean(\n                                                true,\n                                            ),\n                                        ),\n                                        span: Span {\n                                            row_start: 4,\n                                            row_end: Some(\n                                                4,\n                                            ),\n                                            col_start: 16,\n                                            col_end: Some(\n                                                20,\n                                            ),\n                                        },\n                                    },\n                                ),\n                            ),\n                            span: Span {\n                                row_start: 4,\n                                row_end: Some(\n                                    4,\n                                ),\n                                col_start: 16,\n                                col_end: Some(\n                                    20,\n                                ),\n                            },\n                        },\n                    ],\n                    else_block: Some(\n                        [\n                            StatementNode {\n                                kind: Return(\n                                    Some(\n                                        ExpressionNode {\n                                            kind: Call {\n                                                func: ExpressionNode {\n                                                    kind: Identifier(\n                                                        \"odd\",\n                                                    ),\n                                                    span: Span {\n                                                        row_start: 6,\n                                                        row_end: Some(\n                                                            6,\n                                                        ),\n                                                        col_start: 16,\n                                                        col_end: Some(\n                                                            19,\n                                                        ),\n                                                    },\n                                                },\n                                                args: [\n                                                    ExpressionNode {\n                                                        kind: Binary {\n                                                            left: ExpressionNode {\n                                                                kind: Identifier(\n                                                                    \"n\",\n                                                                ),\n                                                                span: Span {\n                                                                    row_start: 6,\n                                                                    row_end: Some(\n                                                                        6,\n                                                                    ),\n                                                                    col_start: 20,\n                                                                    col_end: Some(\n                                                                        21,\n                                                                    ),\n                                                                },\n                                                            },\n                                                            op: Subtract,\n                                                            right: ExpressionNode {\n                                                                kind: Literal(\n                                                                    Integer(\n                                                                        1,\n                                                                    ),\n                                                                ),\n                                                                span: Span {\n                                                                    row_start: 6,\n                                                                    row_end: Some(\n                                                                        6,\n                                                                    ),\n                                                                    col_start: 24,\n                                                                    col_end: Some(\n                                                                        25,\n                                                                    ),\n                                                                },\n                                                            },\n                                                        },\n                                                        span: Span {\n                                                            row_start: 6,\n                                                            row_end: Some(\n                                                                6,\n                                                            ),\n                                                            col_start: 20,\n                                                            col_end: Some(\n                                                                25,\n                                                            ),\n                                                        },\n                                                    },\n                                                ],\n                                            },\n                                            span: Span {\n                                                row_start: 6,\n                                                row_end: Some(\n                                                    6,\n                                                ),\n                                                col_start: 16,\n                                                col_end: Some(\n                                                    19,\n                                                ),\n                                            },\n                                        },\n                                    ),\n                                ),\n                                span: Span {\n                                    row_start: 6,\n                                    row_end: Some(\n                                        6,\n                                    ),\n                                    col_start: 16,\n                                    col_end: Some(\n                                        19,\n                                    ),\n                                },\n                            },\n                        ],\n                    ),\n                },\n                span: Span {\n                    row_start: 3,\n                    row_end: Some(\n                        6,\n                    ),\n                    col_start: 5,\n                    col_end: Some(\n                        19,\n                    ),\n                },\n            },\n        ],\n        span: Span {\n            row_start: 2,\n            row_end: Some(\n                6,\n            ),\n            col_start: 1,\n            col_end: Some(\n                19,\n            ),\n        },\n    },\n)\n\nFunction(\n    FunctionNode {\n        name: \"odd\",\n        type_params: [],\n        params: [\n            Param {\n                name: \"n\",\n                type_: TypeNode {\n                    kind: Primitive(\n                        Int,\n                    ),\n                    span: Span {\n                        row_start: 10,\n                        row_end: Some(\n                            10,\n                        ),\n                        col_start: 8,\n                        col_end: Some(\n                            11,\n                        ),\n                    },\n                },\n            },\n        ],\n        return_type: TypeNode {\n            kind: Primitive(\n                Bool,\n            ),\n            span: Span {\n                row_start: 10,\n                row_end: Some(\n                    10,\n                ),\n                col_start: 23,\n                col_end: Some(\n                    27,\n                ),\n            },\n        },\n        body: [\n            StatementNode {\n                kind: If {\n                    cond: ExpressionNode {\n                        kind: Binary {\n                            left: ExpressionNode {\n                                kind: Identifier(\n                                    \"n\",\n                                ),\n                                span: Span {\n                                    row_start: 11,\n                                    row_end: Some(\n                                        11,\n                                    ),\n                                    col_start: 8,\n                                    col_end: Some(\n                                        9,\n                                    ),\n                                },\n                            },\n                            op: Equal,\n                            right: ExpressionNode {\n                                kind: Literal(\n                                    Integer(\n                                        0,\n                                    ),\n                                ),\n                                span: Span {\n                                    row_start: 11,\n                                    row_end: Some(\n                                        11,\n                                    ),\n                                    col_start: 13,\n                                    col_end: Some(\n                                        14,\n                                    ),\n                                },\n                            },\n                        },\n                        span: Span {\n                            row_start: 11,\n                            row_end: Some(\n                                11,\n                            ),\n                            col_start: 8,\n                            col_end: Some(\n                                14,\n                            ),\n                        },\n                    },\n                    then_block: [\n                        StatementNode {\n                            kind: Return(\n                                Some(\n                                    ExpressionNode {\n                                        kind: Literal(\n                                            Boolean(\n                                                false,\n                                            ),\n                                        ),\n                                        span: Span {\n                                            row_start: 12,\n                                            row_end: Some(\n                                                12,\n                                            ),\n                                            col_start: 16,\n                                            col_end: Some(\n                                                21,\n                                            ),\n                                        },\n                                    },\n                                ),\n                            ),\n                            span: Span {\n                                row_start: 12,\n                                row_end: Some(\n                                    12,\n                                ),\n                                col_start: 16,\n                                col_end: Some(\n                                    21,\n                                ),\n                            },\n                        },\n                    ],\n                    else_block: Some(\n                        [\n                            StatementNode {\n                                kind: Return(\n                                    Some(\n                                        ExpressionNode {\n                                            kind: Call {\n                                                func: ExpressionNode {\n                                                    kind: Identifier(\n                                                        \"even\",\n                                                    ),\n                                                    span: Span {\n                                                        row_start: 14,\n                                                        row_end: Some(\n                                                            14,\n                                                        ),\n                                                        col_start: 16,\n                                                        col_end: Some(\n                                                            20,\n                                                        ),\n                                                    },\n                                                },\n                                                args: [\n                                                    ExpressionNode {\n                                                        kind: Binary {\n                                                            left: ExpressionNode {\n                                                                kind: Identifier(\n                                                                    \"n\",\n                                                                ),\n                                                                span: Span {\n                                                                    row_start: 14,\n                                                                    row_end: Some(\n                                                                        14,\n                                                                    ),\n                                                                    col_start: 21,\n                                                                    col_end: Some(\n                                                                        22,\n                                                                    ),\n                                                                },\n                                                            },\n                                                            op: Subtract,\n                                                            right: ExpressionNode {\n                                                                kind: Literal(\n                                                                    Integer(\n                                                                        1,\n                                                                    ),\n                                                                ),\n                                                                span: Span {\n                                                                    row_start: 14,\n                                                                    row_end: Some(\n                                                                        14,\n                                                                    ),\n                                                                    col_start: 25,\n                                                                    col_end: Some(\n                                                                        26,\n                                                                    ),\n                                                                },\n                                                            },\n                                                        },\n                                                        span: Span {\n                                                            row_start: 14,\n                                                            row_end: Some(\n                                                                14,\n                                                            ),\n                                                            col_start: 21,\n                                                            col_end: Some(\n                                                                26,\n                                                            ),\n                                                        },\n                                                    },\n                                                ],\n                                            },\n                                            span: Span {\n                                                row_start: 14,\n                                                row_end: Some(\n                                                    14,\n                                                ),\n                                                col_start: 16,\n                                                col_end: Some(\n                                                    20,\n                                                ),\n                                            },\n                                        },\n                                    ),\n                                ),\n                                span: Span {\n                                    row_start: 14,\n                                    row_end: Some(\n                                        14,\n                                    ),\n                                    col_start: 16,\n                                    col_end: Some(\n                                        20,\n                                    ),\n                                },\n                            },\n                        ],\n                    ),\n                },\n                span: Span {\n                    row_start: 11,\n                    row_end: Some(\n                        14,\n                    ),\n                    col_start: 5,\n                    col_end: Some(\n                        20,\n                    ),\n                },\n            },\n        ],\n        span: Span {\n            row_start: 10,\n            row_end: Some(\n                14,\n            ),\n            col_start: 1,\n            col_end: Some(\n                20,\n            ),\n        },\n    },\n)\n\nFunction(\n    FunctionNode {\n        name: \"main\",\n        type_params: [],\n        params: [],\n        return_type: TypeNode {\n            kind: Primitive(\n                Void,\n            ),\n            span: Span {\n                row_start: 18,\n                row_end: Some(\n                    18,\n                ),\n                col_start: 19,\n                col_end: Some(\n                    23,\n                ),\n            },\n        },\n        body: [\n            StatementNode {\n                kind: Expression(\n                    ExpressionNode {\n                        kind: Call {\n                            func: ExpressionNode {\n                                kind: Identifier(\n                                    \"print\",\n                                ),\n                                span: Span {\n                                    row_start: 19,\n                                    row_end: Some(\n                                        19,\n                                    ),\n                                    col_start: 5,\n                                    col_end: Some(\n                                        10,\n                                    ),\n                                },\n                            },\n                            args: [\n                                ExpressionNode {\n                                    kind: Call {\n                                        func: ExpressionNode {\n                                            kind: FieldAccess {\n                                                expr: ExpressionNode {\n                                                    kind: Call {\n                                                        func: ExpressionNode {\n                                                            kind: Identifier(\n                                                                \"even\",\n                                                            ),\n                                                            span: Span {\n                                                                row_start: 19,\n                                                                row_end: Some(\n                                                                    19,\n                                                                ),\n                                                                col_start: 11,\n                                                                col_end: Some(\n                                                                    15,\n                                                                ),\n                                                            },\n                                                        },\n                                                        args: [\n                                                            ExpressionNode {\n                                                                kind: Literal(\n                                                                    Integer(\n                                                                        4,\n                                                                    ),\n                                                                ),\n                                                                span: Span {\n                                                                    row_start: 19,\n                                                                    row_end: Some(\n                                                                        19,\n                                                                    ),\n                                                                    col_start: 16,\n                                                                    col_end: Some(\n                                                                        17,\n                                                                    ),\n                                                                },\n                                                            },\n                                                        ],\n                                                    },\n                                                    span: Span {\n                                                        row_start: 19,\n                                                        row_end: Some(\n                                                            19,\n                                                        ),\n                                                        col_start: 11,\n                                                        col_end: Some(\n                                                            15,\n                                                        ),\n                                                    },\n                                                },\n                                                field: \"to_string\",\n                                            },\n                                            span: Span {\n                                                row_start: 19,\n                                                row_end: Some(\n                                                    19,\n                                                ),\n                                                col_start: 11,\n                                                col_end: Some(\n                                                    28,\n                                                ),\n                                            },\n                                        },\n                                        args: [],\n                                    },\n                                    span: Span {\n                                        row_start: 19,\n                                        row_end: Some(\n                                            19,\n                                        ),\n                                        col_start: 11,\n                                        col_end: Some(\n                                            28,\n                                        ),\n                                    },\n                                },\n                            ],\n                        },\n                        span: Span {\n                            row_start: 19,\n                            row_end: Some(\n                                19,\n                            ),\n                            col_start: 5,\n                            col_end: Some(\n                                10,\n                            ),\n                        },\n                    },\n                ),\n                span: Span {\n                    row_start: 19,\n                    row_end: Some(\n                        19,\n                    ),\n                    col_start: 5,\n                    col_end: Some(\n                        10,\n                    ),\n                },\n            },\n            StatementNode {\n                kind: Expression(\n                    ExpressionNode {\n                        kind: Call {\n                            func: ExpressionNode {\n                                kind: Identifier(\n                                    \"print\",\n                                ),\n                                span: Span {\n                                    row_start: 20,\n                                    row_end: Some(\n                                        20,\n                                    ),\n                                    col_start: 5,\n                                    col_end: Some(\n                                        10,\n                                    ),\n                                },\n                            },\n                            args: [\n                                ExpressionNode {\n                                    kind: Call {\n                                        func: ExpressionNode {\n                                            kind: FieldAccess {\n                                                expr: ExpressionNode {\n                                                    kind: Call {\n                                                        func: ExpressionNode {\n                                                            kind: Identifier(\n                                                                \"odd\",\n                                                            ),\n                                                            span: Span {\n                                                                row_start: 20,\n                                                                row_end: Some(\n                                                                    20,\n                                                                ),\n                                                                col_start: 11,\n                                                                col_end: Some(\n                                                                    14,\n                                                                ),\n                                                            },\n                                                        },\n                                                        args: [\n                                                            ExpressionNode {\n                                                                kind: Literal(\n                                                                    Integer(\n                                                                        5,\n                                                                    ),\n                                                                ),\n                                                                span: Span {\n                                                                    row_start: 20,\n                                                                    row_end: Some(\n                                                                        20,\n                                                                    ),\n                                                                    col_start: 15,\n                                                                    col_end: Some(\n                                                                        16,\n                                                                    ),\n                                                                },\n                                                            },\n                                                        ],\n                                                    },\n                                                    span: Span {\n                                                        row_start: 20,\n                                                        row_end: Some(\n                                                            20,\n                                                        ),\n                                                        col_start: 11,\n                                                        col_end: Some(\n                                                            14,\n                                                        ),\n                                                    },\n                                                },\n                                                field: \"to_string\",\n                                            },\n                                            span: Span {\n                                                row_start: 20,\n                                                row_end: Some(\n                                                    20,\n                                                ),\n                                                col_start: 11,\n                                                col_end: Some(\n                                                    27,\n                                                ),\n                                            },\n                                        },\n                                        args: [],\n                                    },\n                                    span: Span {\n                                        row_start: 20,\n                                        row_end: Some(\n                                            20,\n                                        ),\n                                        col_start: 11,\n                                        col_end: Some(\n                                            27,\n                                        ),\n                                    },\n                                },\n                            ],\n                        },\n                        span: Span {\n                            row_start: 20,\n                            row_end: Some(\n                                20,\n                            ),\n                            col_start: 5,\n                            col_end: Some(\n                                10,\n                            ),\n                        },\n                    },\n                ),\n                span: Span {\n                    row_start: 20,\n                    row_end: Some(\n                        20,\n                    ),\n                    col_start: 5,\n                    col_end: Some(\n                        10,\n                    ),\n                },\n            },\n        ],\n        span: Span {\n            row_start: 18,\n            row_end: Some(\n                20,\n            ),\n            col_start: 1,\n            col_end: Some(\n                10,\n            ),\n        },\n    },\n)\n\n"
