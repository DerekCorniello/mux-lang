---
source: tests/lexer_integration.rs
expression: actual_tokens
---
[
    Token {
        token_type: LineComment(
            "Collections",
        ),
        span: Span {
            row_start: 1,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 1,
            row_end: None,
            col_start: 15,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "nums",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 6,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 11,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: OpenBracket,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 13,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            1,
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 14,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 15,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            2,
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 17,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            3,
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 20,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            4,
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 23,
            col_end: Some(
                24,
            ),
        },
    },
    Token {
        token_type: CloseBracket,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 24,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 25,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "scores",
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 6,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 13,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 15,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Alice",
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 16,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: Colon,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 23,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            90,
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 25,
            col_end: Some(
                27,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 27,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Bob",
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 29,
            col_end: Some(
                34,
            ),
        },
    },
    Token {
        token_type: Colon,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 34,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            85,
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 36,
            col_end: Some(
                38,
            ),
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 38,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 39,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "matrix",
        ),
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 6,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 13,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: OpenBracket,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 15,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBracket,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 16,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            1,
        ),
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 17,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            2,
        ),
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 20,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: CloseBracket,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 22,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBracket,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 24,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            3,
        ),
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 25,
            col_end: Some(
                26,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 26,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            4,
        ),
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 28,
            col_end: Some(
                29,
            ),
        },
    },
    Token {
        token_type: CloseBracket,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 29,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBracket,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 30,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 31,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 5,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "map",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 1,
            col_end: Some(
                4,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 4,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "string",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 5,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "float",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 13,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 18,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: Id(
            "avgs",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 20,
            col_end: Some(
                24,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 25,
            col_end: Some(
                26,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 27,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Alice",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 28,
            col_end: Some(
                35,
            ),
        },
    },
    Token {
        token_type: Colon,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 35,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            90,
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 37,
            col_end: Some(
                39,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 39,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Bob",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 41,
            col_end: Some(
                46,
            ),
        },
    },
    Token {
        token_type: Colon,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 46,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            85,
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 48,
            col_end: Some(
                50,
            ),
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 50,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 51,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "list",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 5,
            col_end: Some(
                6,
            ),
        },
    },
    Token {
        token_type: Id(
            "list",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 6,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 10,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 11,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 14,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 15,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: Id(
            "grid",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 17,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 22,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: OpenBracket,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 24,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBracket,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 25,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            1,
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 26,
            col_end: Some(
                27,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 27,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            2,
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 29,
            col_end: Some(
                30,
            ),
        },
    },
    Token {
        token_type: CloseBracket,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 30,
            col_end: None,
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 31,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBracket,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 33,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            3,
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 34,
            col_end: Some(
                35,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 35,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            4,
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 37,
            col_end: Some(
                38,
            ),
        },
    },
    Token {
        token_type: CloseBracket,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 38,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBracket,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 39,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 40,
            col_end: None,
        },
    },
    Token {
        token_type: LineComment(
            "Control flow",
        ),
        span: Span {
            row_start: 1,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 1,
            row_end: None,
            col_start: 16,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "x",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 6,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 8,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Int(
            5,
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 10,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: If,
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 1,
            col_end: Some(
                3,
            ),
        },
    },
    Token {
        token_type: Id(
            "x",
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 4,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 6,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: Int(
            0,
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 8,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 10,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 12,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Positive",
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 18,
            col_end: Some(
                28,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 28,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 30,
            col_end: None,
        },
    },
    Token {
        token_type: Else,
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 32,
            col_end: Some(
                36,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 37,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 39,
            col_end: Some(
                44,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 44,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Non-positive",
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 45,
            col_end: Some(
                59,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 59,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 61,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 62,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Match,
        span: Span {
            row_start: 5,
            row_end: Some(
                5,
            ),
            col_start: 1,
            col_end: Some(
                6,
            ),
        },
    },
    Token {
        token_type: Id(
            "Some",
        ),
        span: Span {
            row_start: 5,
            row_end: Some(
                5,
            ),
            col_start: 7,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 5,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            15,
        ),
        span: Span {
            row_start: 5,
            row_end: Some(
                5,
            ),
            col_start: 12,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 5,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 5,
            row_end: None,
            col_start: 16,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 5,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "Some",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 9,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "v",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 10,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: If,
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 13,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: Id(
            "v",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 16,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 18,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: Int(
            10,
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 20,
            col_end: Some(
                22,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 23,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 25,
            col_end: Some(
                30,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 30,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Large: ",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 31,
            col_end: Some(
                40,
            ),
        },
    },
    Token {
        token_type: Plus,
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 41,
            col_end: Some(
                42,
            ),
        },
    },
    Token {
        token_type: Id(
            "v",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 43,
            col_end: Some(
                44,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 44,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 46,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 47,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "Some",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 9,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "v",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 10,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 13,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 15,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 20,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Small: ",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 21,
            col_end: Some(
                30,
            ),
        },
    },
    Token {
        token_type: Plus,
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 31,
            col_end: Some(
                32,
            ),
        },
    },
    Token {
        token_type: Id(
            "v",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 33,
            col_end: Some(
                34,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 34,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 36,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 37,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "None",
        ),
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 10,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 12,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "None",
        ),
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 18,
            col_end: Some(
                24,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 24,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 26,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 27,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 9,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 9,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: For,
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 1,
            col_end: Some(
                4,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 5,
            col_end: Some(
                8,
            ),
        },
    },
    Token {
        token_type: Id(
            "i",
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 9,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: In,
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 11,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: Id(
            "range",
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 14,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 19,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            0,
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 20,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            3,
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 23,
            col_end: Some(
                24,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 24,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 26,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 28,
            col_end: Some(
                33,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 33,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "i",
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 34,
            col_end: Some(
                35,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 35,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 37,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 38,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 12,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: For,
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 1,
            col_end: Some(
                4,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 5,
            col_end: Some(
                8,
            ),
        },
    },
    Token {
        token_type: Id(
            "j",
        ),
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 9,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: In,
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 11,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: Id(
            "range",
        ),
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 14,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 13,
            row_end: None,
            col_start: 19,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            0,
        ),
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 20,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 13,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            10,
        ),
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 23,
            col_end: Some(
                25,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 13,
            row_end: None,
            col_start: 25,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 13,
            row_end: None,
            col_start: 27,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 13,
            row_end: None,
            col_start: 28,
            col_end: None,
        },
    },
    Token {
        token_type: If,
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 5,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: Id(
            "j",
        ),
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 8,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Percent,
        span: Span {
            row_start: 14,
            row_end: None,
            col_start: 10,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            2,
        ),
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 12,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: EqEq,
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 14,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: Int(
            0,
        ),
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 17,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 14,
            row_end: None,
            col_start: 19,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 14,
            row_end: None,
            col_start: 20,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 15,
            row_end: Some(
                15,
            ),
            col_start: 9,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 15,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "even",
        ),
        span: Span {
            row_start: 15,
            row_end: Some(
                15,
            ),
            col_start: 15,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 15,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 15,
            row_end: None,
            col_start: 22,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 16,
            row_end: None,
            col_start: 5,
            col_end: None,
        },
    },
    Token {
        token_type: Else,
        span: Span {
            row_start: 16,
            row_end: Some(
                16,
            ),
            col_start: 7,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 16,
            row_end: None,
            col_start: 12,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 16,
            row_end: None,
            col_start: 13,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 17,
            row_end: Some(
                17,
            ),
            col_start: 9,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 17,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "odd",
        ),
        span: Span {
            row_start: 17,
            row_end: Some(
                17,
            ),
            col_start: 15,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 17,
            row_end: None,
            col_start: 20,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 17,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 18,
            row_end: None,
            col_start: 5,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 18,
            row_end: None,
            col_start: 6,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 19,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 19,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 20,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: While,
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 1,
            col_end: Some(
                6,
            ),
        },
    },
    Token {
        token_type: Id(
            "x",
        ),
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 7,
            col_end: Some(
                8,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 9,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Int(
            0,
        ),
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 11,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 21,
            row_end: None,
            col_start: 13,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "x",
        ),
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 15,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: MinusEq,
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 17,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: Int(
            1,
        ),
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 20,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 21,
            row_end: None,
            col_start: 22,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 21,
            row_end: None,
            col_start: 23,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 22,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: If,
        span: Span {
            row_start: 23,
            row_end: Some(
                23,
            ),
            col_start: 1,
            col_end: Some(
                3,
            ),
        },
    },
    Token {
        token_type: Id(
            "x",
        ),
        span: Span {
            row_start: 23,
            row_end: Some(
                23,
            ),
            col_start: 4,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 23,
            row_end: Some(
                23,
            ),
            col_start: 6,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: Int(
            0,
        ),
        span: Span {
            row_start: 23,
            row_end: Some(
                23,
            ),
            col_start: 8,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 23,
            row_end: None,
            col_start: 10,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 23,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 24,
            row_end: Some(
                24,
            ),
            col_start: 5,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 24,
            row_end: None,
            col_start: 10,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Negative",
        ),
        span: Span {
            row_start: 24,
            row_end: Some(
                24,
            ),
            col_start: 11,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 24,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 24,
            row_end: None,
            col_start: 22,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 25,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 25,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 26,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: If,
        span: Span {
            row_start: 27,
            row_end: Some(
                27,
            ),
            col_start: 1,
            col_end: Some(
                3,
            ),
        },
    },
    Token {
        token_type: Id(
            "x",
        ),
        span: Span {
            row_start: 27,
            row_end: Some(
                27,
            ),
            col_start: 4,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: EqEq,
        span: Span {
            row_start: 27,
            row_end: Some(
                27,
            ),
            col_start: 6,
            col_end: Some(
                8,
            ),
        },
    },
    Token {
        token_type: Int(
            0,
        ),
        span: Span {
            row_start: 27,
            row_end: Some(
                27,
            ),
            col_start: 9,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 27,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 27,
            row_end: None,
            col_start: 12,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 28,
            row_end: Some(
                28,
            ),
            col_start: 5,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 28,
            row_end: None,
            col_start: 10,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Zero",
        ),
        span: Span {
            row_start: 28,
            row_end: Some(
                28,
            ),
            col_start: 11,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 28,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 28,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 29,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Else,
        span: Span {
            row_start: 29,
            row_end: Some(
                29,
            ),
            col_start: 3,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 29,
            row_end: None,
            col_start: 8,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 29,
            row_end: None,
            col_start: 9,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 30,
            row_end: Some(
                30,
            ),
            col_start: 5,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 30,
            row_end: None,
            col_start: 10,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Non-zero",
        ),
        span: Span {
            row_start: 30,
            row_end: Some(
                30,
            ),
            col_start: 11,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 30,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 30,
            row_end: None,
            col_start: 22,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 31,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 31,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 32,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: If,
        span: Span {
            row_start: 33,
            row_end: Some(
                33,
            ),
            col_start: 1,
            col_end: Some(
                3,
            ),
        },
    },
    Token {
        token_type: Id(
            "x",
        ),
        span: Span {
            row_start: 33,
            row_end: Some(
                33,
            ),
            col_start: 4,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 33,
            row_end: Some(
                33,
            ),
            col_start: 6,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: Int(
            10,
        ),
        span: Span {
            row_start: 33,
            row_end: Some(
                33,
            ),
            col_start: 8,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 33,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 33,
            row_end: None,
            col_start: 12,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 34,
            row_end: Some(
                34,
            ),
            col_start: 5,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 34,
            row_end: None,
            col_start: 10,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "gt10",
        ),
        span: Span {
            row_start: 34,
            row_end: Some(
                34,
            ),
            col_start: 11,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 34,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 34,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 35,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Else,
        span: Span {
            row_start: 35,
            row_end: Some(
                35,
            ),
            col_start: 3,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: If,
        span: Span {
            row_start: 35,
            row_end: Some(
                35,
            ),
            col_start: 8,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Id(
            "x",
        ),
        span: Span {
            row_start: 35,
            row_end: Some(
                35,
            ),
            col_start: 11,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 35,
            row_end: Some(
                35,
            ),
            col_start: 13,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: Int(
            5,
        ),
        span: Span {
            row_start: 35,
            row_end: Some(
                35,
            ),
            col_start: 15,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 35,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 35,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 36,
            row_end: Some(
                36,
            ),
            col_start: 5,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 36,
            row_end: None,
            col_start: 10,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "gt5",
        ),
        span: Span {
            row_start: 36,
            row_end: Some(
                36,
            ),
            col_start: 11,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 36,
            row_end: None,
            col_start: 16,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 36,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 37,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Else,
        span: Span {
            row_start: 37,
            row_end: Some(
                37,
            ),
            col_start: 3,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 37,
            row_end: None,
            col_start: 8,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 37,
            row_end: None,
            col_start: 9,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 38,
            row_end: Some(
                38,
            ),
            col_start: 5,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 38,
            row_end: None,
            col_start: 10,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "other",
        ),
        span: Span {
            row_start: 38,
            row_end: Some(
                38,
            ),
            col_start: 11,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 38,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 38,
            row_end: None,
            col_start: 19,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 39,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 39,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 40,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: For,
        span: Span {
            row_start: 41,
            row_end: Some(
                41,
            ),
            col_start: 1,
            col_end: Some(
                4,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 41,
            row_end: Some(
                41,
            ),
            col_start: 5,
            col_end: Some(
                8,
            ),
        },
    },
    Token {
        token_type: Id(
            "j",
        ),
        span: Span {
            row_start: 41,
            row_end: Some(
                41,
            ),
            col_start: 9,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: In,
        span: Span {
            row_start: 41,
            row_end: Some(
                41,
            ),
            col_start: 11,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: Id(
            "range",
        ),
        span: Span {
            row_start: 41,
            row_end: Some(
                41,
            ),
            col_start: 14,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 41,
            row_end: None,
            col_start: 19,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            0,
        ),
        span: Span {
            row_start: 41,
            row_end: Some(
                41,
            ),
            col_start: 20,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 41,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            3,
        ),
        span: Span {
            row_start: 41,
            row_end: Some(
                41,
            ),
            col_start: 23,
            col_end: Some(
                24,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 41,
            row_end: None,
            col_start: 24,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 41,
            row_end: None,
            col_start: 26,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 41,
            row_end: None,
            col_start: 27,
            col_end: None,
        },
    },
    Token {
        token_type: If,
        span: Span {
            row_start: 42,
            row_end: Some(
                42,
            ),
            col_start: 5,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: Id(
            "j",
        ),
        span: Span {
            row_start: 42,
            row_end: Some(
                42,
            ),
            col_start: 8,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: EqEq,
        span: Span {
            row_start: 42,
            row_end: Some(
                42,
            ),
            col_start: 10,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: Int(
            1,
        ),
        span: Span {
            row_start: 42,
            row_end: Some(
                42,
            ),
            col_start: 13,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 42,
            row_end: None,
            col_start: 15,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 42,
            row_end: None,
            col_start: 16,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 43,
            row_end: Some(
                43,
            ),
            col_start: 9,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 43,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "one",
        ),
        span: Span {
            row_start: 43,
            row_end: Some(
                43,
            ),
            col_start: 15,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 43,
            row_end: None,
            col_start: 20,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 43,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 44,
            row_end: None,
            col_start: 5,
            col_end: None,
        },
    },
    Token {
        token_type: Else,
        span: Span {
            row_start: 44,
            row_end: Some(
                44,
            ),
            col_start: 7,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: If,
        span: Span {
            row_start: 44,
            row_end: Some(
                44,
            ),
            col_start: 12,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: Id(
            "j",
        ),
        span: Span {
            row_start: 44,
            row_end: Some(
                44,
            ),
            col_start: 15,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: EqEq,
        span: Span {
            row_start: 44,
            row_end: Some(
                44,
            ),
            col_start: 17,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: Int(
            0,
        ),
        span: Span {
            row_start: 44,
            row_end: Some(
                44,
            ),
            col_start: 20,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 44,
            row_end: None,
            col_start: 22,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 44,
            row_end: None,
            col_start: 23,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 45,
            row_end: Some(
                45,
            ),
            col_start: 9,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 45,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "zero",
        ),
        span: Span {
            row_start: 45,
            row_end: Some(
                45,
            ),
            col_start: 15,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 45,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 45,
            row_end: None,
            col_start: 22,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 46,
            row_end: None,
            col_start: 5,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 46,
            row_end: None,
            col_start: 6,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 47,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 47,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 48,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: While,
        span: Span {
            row_start: 49,
            row_end: Some(
                49,
            ),
            col_start: 1,
            col_end: Some(
                6,
            ),
        },
    },
    Token {
        token_type: Id(
            "x",
        ),
        span: Span {
            row_start: 49,
            row_end: Some(
                49,
            ),
            col_start: 7,
            col_end: Some(
                8,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 49,
            row_end: Some(
                49,
            ),
            col_start: 9,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Int(
            3,
        ),
        span: Span {
            row_start: 49,
            row_end: Some(
                49,
            ),
            col_start: 11,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 49,
            row_end: None,
            col_start: 13,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 49,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "x",
        ),
        span: Span {
            row_start: 50,
            row_end: Some(
                50,
            ),
            col_start: 5,
            col_end: Some(
                6,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 50,
            row_end: Some(
                50,
            ),
            col_start: 7,
            col_end: Some(
                8,
            ),
        },
    },
    Token {
        token_type: Id(
            "x",
        ),
        span: Span {
            row_start: 50,
            row_end: Some(
                50,
            ),
            col_start: 9,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Plus,
        span: Span {
            row_start: 50,
            row_end: Some(
                50,
            ),
            col_start: 11,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: Int(
            1,
        ),
        span: Span {
            row_start: 50,
            row_end: Some(
                50,
            ),
            col_start: 13,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 50,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 51,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 51,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 52,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: If,
        span: Span {
            row_start: 53,
            row_end: Some(
                53,
            ),
            col_start: 1,
            col_end: Some(
                3,
            ),
        },
    },
    Token {
        token_type: Id(
            "x",
        ),
        span: Span {
            row_start: 53,
            row_end: Some(
                53,
            ),
            col_start: 4,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 53,
            row_end: Some(
                53,
            ),
            col_start: 6,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: Int(
            1,
        ),
        span: Span {
            row_start: 53,
            row_end: Some(
                53,
            ),
            col_start: 8,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 53,
            row_end: None,
            col_start: 9,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 54,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 54,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 55,
            row_end: Some(
                55,
            ),
            col_start: 5,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 55,
            row_end: None,
            col_start: 10,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "nl brace then",
        ),
        span: Span {
            row_start: 55,
            row_end: Some(
                55,
            ),
            col_start: 11,
            col_end: Some(
                26,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 55,
            row_end: None,
            col_start: 26,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 55,
            row_end: None,
            col_start: 27,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 56,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 56,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: Else,
        span: Span {
            row_start: 57,
            row_end: Some(
                57,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 57,
            row_end: None,
            col_start: 5,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 58,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 58,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 59,
            row_end: Some(
                59,
            ),
            col_start: 5,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 59,
            row_end: None,
            col_start: 10,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "nl brace else",
        ),
        span: Span {
            row_start: 59,
            row_end: Some(
                59,
            ),
            col_start: 11,
            col_end: Some(
                26,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 59,
            row_end: None,
            col_start: 26,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 59,
            row_end: None,
            col_start: 27,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 60,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 60,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: LineComment(
            "Enums and Classes",
        ),
        span: Span {
            row_start: 1,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 1,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: Enum,
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "Shape",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 6,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 12,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "Circle",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 14,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 20,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "float",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 21,
            col_end: Some(
                26,
            ),
        },
    },
    Token {
        token_type: Id(
            "r",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 27,
            col_end: Some(
                28,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 28,
            col_end: None,
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 29,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "Rectangle",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 31,
            col_end: Some(
                40,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 40,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "float",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 41,
            col_end: Some(
                46,
            ),
        },
    },
    Token {
        token_type: Id(
            "w",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 47,
            col_end: Some(
                48,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 48,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "float",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 50,
            col_end: Some(
                55,
            ),
        },
    },
    Token {
        token_type: Id(
            "h",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 56,
            col_end: Some(
                57,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 57,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 59,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 60,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Interface,
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 1,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Id(
            "Drawable",
        ),
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 11,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 20,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 22,
            col_end: Some(
                26,
            ),
        },
    },
    Token {
        token_type: Id(
            "draw",
        ),
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 27,
            col_end: Some(
                31,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 31,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 32,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 34,
            col_end: Some(
                41,
            ),
        },
    },
    Token {
        token_type: Id(
            "void",
        ),
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 42,
            col_end: Some(
                46,
            ),
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 47,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 48,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 5,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Class,
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 1,
            col_end: Some(
                6,
            ),
        },
    },
    Token {
        token_type: Id(
            "Circle",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 7,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: Is,
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 14,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: Id(
            "Drawable",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 17,
            col_end: Some(
                25,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 26,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 27,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "float",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 5,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Id(
            "radius",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 11,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "draw",
        ),
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 10,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 15,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 17,
            col_end: Some(
                24,
            ),
        },
    },
    Token {
        token_type: Id(
            "void",
        ),
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 25,
            col_end: Some(
                29,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 30,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 32,
            col_end: Some(
                37,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 37,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Circle radius=",
        ),
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 38,
            col_end: Some(
                54,
            ),
        },
    },
    Token {
        token_type: Plus,
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 55,
            col_end: Some(
                56,
            ),
        },
    },
    Token {
        token_type: Id(
            "radius",
        ),
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 57,
            col_end: Some(
                63,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 63,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 65,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 66,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 9,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 9,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: Import,
        span: Span {
            row_start: 1,
            row_end: Some(
                1,
            ),
            col_start: 1,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: Id(
            "math",
        ),
        span: Span {
            row_start: 1,
            row_end: Some(
                1,
            ),
            col_start: 8,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 1,
            row_end: None,
            col_start: 12,
            col_end: None,
        },
    },
    Token {
        token_type: Import,
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 1,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: Id(
            "utils",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 8,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: Dot,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 13,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "logger",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 14,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: As,
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 21,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: Underscore,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 24,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 25,
            col_end: None,
        },
    },
    Token {
        token_type: LineComment(
            "TODO: not sure this is what i want but for now with semantic analysis, this is what we will do",
        ),
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 98,
            col_end: None,
        },
    },
    Token {
        token_type: Import,
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 1,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: Id(
            "std",
        ),
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 8,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Dot,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "Some",
        ),
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 12,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 16,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 5,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Const,
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 1,
            col_end: Some(
                6,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 7,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Id(
            "MAX",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 11,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 15,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: Int(
            100,
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 17,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 20,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "flt",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 6,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 10,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Float(
            7.82,
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 12,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 16,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "message",
        ),
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 6,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 14,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: Str(
            "Mux Parser Test",
        ),
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 16,
            col_end: Some(
                33,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 33,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 9,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Enum,
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "Shape",
        ),
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 6,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 12,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "Circle",
        ),
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 14,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 20,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "float",
        ),
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 21,
            col_end: Some(
                26,
            ),
        },
    },
    Token {
        token_type: Id(
            "radius",
        ),
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 27,
            col_end: Some(
                33,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 33,
            col_end: None,
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 34,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "Rectangle",
        ),
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 36,
            col_end: Some(
                45,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 45,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "float",
        ),
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 46,
            col_end: Some(
                51,
            ),
        },
    },
    Token {
        token_type: Id(
            "width",
        ),
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 52,
            col_end: Some(
                57,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 57,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "float",
        ),
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 59,
            col_end: Some(
                64,
            ),
        },
    },
    Token {
        token_type: Id(
            "height",
        ),
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 65,
            col_end: Some(
                71,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 71,
            col_end: None,
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 72,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "Square",
        ),
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 74,
            col_end: Some(
                80,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 80,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "float",
        ),
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 81,
            col_end: Some(
                86,
            ),
        },
    },
    Token {
        token_type: Id(
            "size",
        ),
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 87,
            col_end: Some(
                91,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 91,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 93,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 94,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Interface,
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 1,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Id(
            "Drawable",
        ),
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 11,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 12,
            row_end: None,
            col_start: 20,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 22,
            col_end: Some(
                26,
            ),
        },
    },
    Token {
        token_type: Id(
            "draw",
        ),
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 27,
            col_end: Some(
                31,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 12,
            row_end: None,
            col_start: 31,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 12,
            row_end: None,
            col_start: 32,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 34,
            col_end: Some(
                41,
            ),
        },
    },
    Token {
        token_type: Id(
            "void",
        ),
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 42,
            col_end: Some(
                46,
            ),
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 12,
            row_end: None,
            col_start: 47,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 12,
            row_end: None,
            col_start: 48,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 13,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Class,
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 1,
            col_end: Some(
                6,
            ),
        },
    },
    Token {
        token_type: Id(
            "Circle",
        ),
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 7,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: Is,
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 14,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: Id(
            "Drawable",
        ),
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 17,
            col_end: Some(
                25,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 14,
            row_end: None,
            col_start: 25,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "ShapeLike",
        ),
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 27,
            col_end: Some(
                36,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 14,
            row_end: None,
            col_start: 37,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 14,
            row_end: None,
            col_start: 38,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "float",
        ),
        span: Span {
            row_start: 15,
            row_end: Some(
                15,
            ),
            col_start: 5,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Id(
            "radius",
        ),
        span: Span {
            row_start: 15,
            row_end: Some(
                15,
            ),
            col_start: 11,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 15,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 16,
            row_end: Some(
                16,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "draw",
        ),
        span: Span {
            row_start: 16,
            row_end: Some(
                16,
            ),
            col_start: 10,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 16,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 16,
            row_end: None,
            col_start: 15,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 16,
            row_end: Some(
                16,
            ),
            col_start: 17,
            col_end: Some(
                24,
            ),
        },
    },
    Token {
        token_type: Id(
            "void",
        ),
        span: Span {
            row_start: 16,
            row_end: Some(
                16,
            ),
            col_start: 25,
            col_end: Some(
                29,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 16,
            row_end: None,
            col_start: 30,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 16,
            row_end: Some(
                16,
            ),
            col_start: 32,
            col_end: Some(
                37,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 16,
            row_end: None,
            col_start: 37,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Circle radius=",
        ),
        span: Span {
            row_start: 16,
            row_end: Some(
                16,
            ),
            col_start: 38,
            col_end: Some(
                54,
            ),
        },
    },
    Token {
        token_type: Plus,
        span: Span {
            row_start: 16,
            row_end: Some(
                16,
            ),
            col_start: 55,
            col_end: Some(
                56,
            ),
        },
    },
    Token {
        token_type: Id(
            "radius",
        ),
        span: Span {
            row_start: 16,
            row_end: Some(
                16,
            ),
            col_start: 57,
            col_end: Some(
                63,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 16,
            row_end: None,
            col_start: 63,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 16,
            row_end: None,
            col_start: 65,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 16,
            row_end: None,
            col_start: 66,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 17,
            row_end: Some(
                17,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "area",
        ),
        span: Span {
            row_start: 17,
            row_end: Some(
                17,
            ),
            col_start: 10,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 17,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 17,
            row_end: None,
            col_start: 15,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 17,
            row_end: Some(
                17,
            ),
            col_start: 17,
            col_end: Some(
                24,
            ),
        },
    },
    Token {
        token_type: Id(
            "float",
        ),
        span: Span {
            row_start: 17,
            row_end: Some(
                17,
            ),
            col_start: 25,
            col_end: Some(
                30,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 17,
            row_end: None,
            col_start: 31,
            col_end: None,
        },
    },
    Token {
        token_type: Return,
        span: Span {
            row_start: 17,
            row_end: Some(
                17,
            ),
            col_start: 33,
            col_end: Some(
                39,
            ),
        },
    },
    Token {
        token_type: Id(
            "pi",
        ),
        span: Span {
            row_start: 17,
            row_end: Some(
                17,
            ),
            col_start: 40,
            col_end: Some(
                42,
            ),
        },
    },
    Token {
        token_type: Star,
        span: Span {
            row_start: 17,
            row_end: Some(
                17,
            ),
            col_start: 43,
            col_end: Some(
                44,
            ),
        },
    },
    Token {
        token_type: Id(
            "radius",
        ),
        span: Span {
            row_start: 17,
            row_end: Some(
                17,
            ),
            col_start: 45,
            col_end: Some(
                51,
            ),
        },
    },
    Token {
        token_type: Star,
        span: Span {
            row_start: 17,
            row_end: Some(
                17,
            ),
            col_start: 52,
            col_end: Some(
                53,
            ),
        },
    },
    Token {
        token_type: Id(
            "radius",
        ),
        span: Span {
            row_start: 17,
            row_end: Some(
                17,
            ),
            col_start: 54,
            col_end: Some(
                60,
            ),
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 17,
            row_end: None,
            col_start: 61,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 17,
            row_end: None,
            col_start: 62,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 18,
            row_end: Some(
                18,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "resize",
        ),
        span: Span {
            row_start: 18,
            row_end: Some(
                18,
            ),
            col_start: 10,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 18,
            row_end: None,
            col_start: 16,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "float",
        ),
        span: Span {
            row_start: 18,
            row_end: Some(
                18,
            ),
            col_start: 17,
            col_end: Some(
                22,
            ),
        },
    },
    Token {
        token_type: Id(
            "newRadius",
        ),
        span: Span {
            row_start: 18,
            row_end: Some(
                18,
            ),
            col_start: 23,
            col_end: Some(
                32,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 18,
            row_end: None,
            col_start: 32,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "string",
        ),
        span: Span {
            row_start: 18,
            row_end: Some(
                18,
            ),
            col_start: 34,
            col_end: Some(
                40,
            ),
        },
    },
    Token {
        token_type: Underscore,
        span: Span {
            row_start: 18,
            row_end: None,
            col_start: 41,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 18,
            row_end: None,
            col_start: 42,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 18,
            row_end: Some(
                18,
            ),
            col_start: 44,
            col_end: Some(
                51,
            ),
        },
    },
    Token {
        token_type: Id(
            "void",
        ),
        span: Span {
            row_start: 18,
            row_end: Some(
                18,
            ),
            col_start: 52,
            col_end: Some(
                56,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 18,
            row_end: None,
            col_start: 57,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "radius",
        ),
        span: Span {
            row_start: 18,
            row_end: Some(
                18,
            ),
            col_start: 59,
            col_end: Some(
                65,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 18,
            row_end: Some(
                18,
            ),
            col_start: 66,
            col_end: Some(
                67,
            ),
        },
    },
    Token {
        token_type: Id(
            "newRadius",
        ),
        span: Span {
            row_start: 18,
            row_end: Some(
                18,
            ),
            col_start: 68,
            col_end: Some(
                77,
            ),
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 18,
            row_end: None,
            col_start: 78,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 18,
            row_end: None,
            col_start: 79,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 19,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 19,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 20,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "max",
        ),
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 6,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 9,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Id(
            "T",
        ),
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 10,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Is,
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 12,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: Id(
            "comparable",
        ),
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 15,
            col_end: Some(
                25,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 25,
            col_end: Some(
                26,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 21,
            row_end: None,
            col_start: 26,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "T",
        ),
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 27,
            col_end: Some(
                28,
            ),
        },
    },
    Token {
        token_type: Id(
            "a",
        ),
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 29,
            col_end: Some(
                30,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 21,
            row_end: None,
            col_start: 30,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "T",
        ),
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 32,
            col_end: Some(
                33,
            ),
        },
    },
    Token {
        token_type: Id(
            "b",
        ),
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 34,
            col_end: Some(
                35,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 21,
            row_end: None,
            col_start: 35,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 37,
            col_end: Some(
                44,
            ),
        },
    },
    Token {
        token_type: Id(
            "T",
        ),
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 45,
            col_end: Some(
                46,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 21,
            row_end: None,
            col_start: 47,
            col_end: None,
        },
    },
    Token {
        token_type: If,
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 49,
            col_end: Some(
                51,
            ),
        },
    },
    Token {
        token_type: Id(
            "a",
        ),
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 52,
            col_end: Some(
                53,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 54,
            col_end: Some(
                55,
            ),
        },
    },
    Token {
        token_type: Id(
            "b",
        ),
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 56,
            col_end: Some(
                57,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 21,
            row_end: None,
            col_start: 58,
            col_end: None,
        },
    },
    Token {
        token_type: Return,
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 60,
            col_end: Some(
                66,
            ),
        },
    },
    Token {
        token_type: Id(
            "a",
        ),
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 67,
            col_end: Some(
                68,
            ),
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 21,
            row_end: None,
            col_start: 69,
            col_end: None,
        },
    },
    Token {
        token_type: Return,
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 71,
            col_end: Some(
                77,
            ),
        },
    },
    Token {
        token_type: Id(
            "b",
        ),
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 78,
            col_end: Some(
                79,
            ),
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 21,
            row_end: None,
            col_start: 80,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 21,
            row_end: None,
            col_start: 81,
            col_end: None,
        },
    },
    Token {
        token_type: Class,
        span: Span {
            row_start: 22,
            row_end: Some(
                22,
            ),
            col_start: 1,
            col_end: Some(
                6,
            ),
        },
    },
    Token {
        token_type: Id(
            "Stack",
        ),
        span: Span {
            row_start: 22,
            row_end: Some(
                22,
            ),
            col_start: 7,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 22,
            row_end: Some(
                22,
            ),
            col_start: 12,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: Id(
            "T",
        ),
        span: Span {
            row_start: 22,
            row_end: Some(
                22,
            ),
            col_start: 13,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 22,
            row_end: Some(
                22,
            ),
            col_start: 14,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 22,
            row_end: None,
            col_start: 16,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 22,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "list",
        ),
        span: Span {
            row_start: 23,
            row_end: Some(
                23,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 23,
            row_end: Some(
                23,
            ),
            col_start: 9,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Id(
            "T",
        ),
        span: Span {
            row_start: 23,
            row_end: Some(
                23,
            ),
            col_start: 10,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 23,
            row_end: Some(
                23,
            ),
            col_start: 11,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: Id(
            "items",
        ),
        span: Span {
            row_start: 23,
            row_end: Some(
                23,
            ),
            col_start: 13,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 23,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 24,
            row_end: Some(
                24,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "push",
        ),
        span: Span {
            row_start: 24,
            row_end: Some(
                24,
            ),
            col_start: 10,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 24,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "T",
        ),
        span: Span {
            row_start: 24,
            row_end: Some(
                24,
            ),
            col_start: 15,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: Id(
            "item",
        ),
        span: Span {
            row_start: 24,
            row_end: Some(
                24,
            ),
            col_start: 17,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 24,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 24,
            row_end: Some(
                24,
            ),
            col_start: 23,
            col_end: Some(
                30,
            ),
        },
    },
    Token {
        token_type: Id(
            "void",
        ),
        span: Span {
            row_start: 24,
            row_end: Some(
                24,
            ),
            col_start: 31,
            col_end: Some(
                35,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 24,
            row_end: None,
            col_start: 36,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "items",
        ),
        span: Span {
            row_start: 24,
            row_end: Some(
                24,
            ),
            col_start: 38,
            col_end: Some(
                43,
            ),
        },
    },
    Token {
        token_type: Dot,
        span: Span {
            row_start: 24,
            row_end: None,
            col_start: 43,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "append",
        ),
        span: Span {
            row_start: 24,
            row_end: Some(
                24,
            ),
            col_start: 44,
            col_end: Some(
                50,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 24,
            row_end: None,
            col_start: 50,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "item",
        ),
        span: Span {
            row_start: 24,
            row_end: Some(
                24,
            ),
            col_start: 51,
            col_end: Some(
                55,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 24,
            row_end: None,
            col_start: 55,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 24,
            row_end: None,
            col_start: 57,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 24,
            row_end: None,
            col_start: 58,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 25,
            row_end: Some(
                25,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "pop",
        ),
        span: Span {
            row_start: 25,
            row_end: Some(
                25,
            ),
            col_start: 10,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 25,
            row_end: None,
            col_start: 13,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 25,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 25,
            row_end: Some(
                25,
            ),
            col_start: 16,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: Id(
            "Optional",
        ),
        span: Span {
            row_start: 25,
            row_end: Some(
                25,
            ),
            col_start: 24,
            col_end: Some(
                32,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 25,
            row_end: Some(
                25,
            ),
            col_start: 32,
            col_end: Some(
                33,
            ),
        },
    },
    Token {
        token_type: Id(
            "T",
        ),
        span: Span {
            row_start: 25,
            row_end: Some(
                25,
            ),
            col_start: 33,
            col_end: Some(
                34,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 25,
            row_end: Some(
                25,
            ),
            col_start: 34,
            col_end: Some(
                35,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 25,
            row_end: None,
            col_start: 36,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 25,
            row_end: None,
            col_start: 37,
            col_end: None,
        },
    },
    Token {
        token_type: If,
        span: Span {
            row_start: 26,
            row_end: Some(
                26,
            ),
            col_start: 9,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Id(
            "items",
        ),
        span: Span {
            row_start: 26,
            row_end: Some(
                26,
            ),
            col_start: 12,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: Dot,
        span: Span {
            row_start: 26,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "isEmpty",
        ),
        span: Span {
            row_start: 26,
            row_end: Some(
                26,
            ),
            col_start: 18,
            col_end: Some(
                25,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 26,
            row_end: None,
            col_start: 25,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 26,
            row_end: None,
            col_start: 26,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 26,
            row_end: None,
            col_start: 28,
            col_end: None,
        },
    },
    Token {
        token_type: Return,
        span: Span {
            row_start: 26,
            row_end: Some(
                26,
            ),
            col_start: 30,
            col_end: Some(
                36,
            ),
        },
    },
    Token {
        token_type: Id(
            "None",
        ),
        span: Span {
            row_start: 26,
            row_end: Some(
                26,
            ),
            col_start: 37,
            col_end: Some(
                41,
            ),
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 26,
            row_end: None,
            col_start: 42,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 26,
            row_end: None,
            col_start: 43,
            col_end: None,
        },
    },
    Token {
        token_type: Return,
        span: Span {
            row_start: 27,
            row_end: Some(
                27,
            ),
            col_start: 9,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: Id(
            "Some",
        ),
        span: Span {
            row_start: 27,
            row_end: Some(
                27,
            ),
            col_start: 16,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 27,
            row_end: None,
            col_start: 20,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "items",
        ),
        span: Span {
            row_start: 27,
            row_end: Some(
                27,
            ),
            col_start: 21,
            col_end: Some(
                26,
            ),
        },
    },
    Token {
        token_type: Dot,
        span: Span {
            row_start: 27,
            row_end: None,
            col_start: 26,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "removeLast",
        ),
        span: Span {
            row_start: 27,
            row_end: Some(
                27,
            ),
            col_start: 27,
            col_end: Some(
                37,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 27,
            row_end: None,
            col_start: 37,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 27,
            row_end: None,
            col_start: 38,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 27,
            row_end: None,
            col_start: 39,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 27,
            row_end: None,
            col_start: 40,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 28,
            row_end: None,
            col_start: 5,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 28,
            row_end: None,
            col_start: 6,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 29,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 29,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 30,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 31,
            row_end: Some(
                31,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "divide",
        ),
        span: Span {
            row_start: 31,
            row_end: Some(
                31,
            ),
            col_start: 6,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 31,
            row_end: None,
            col_start: 12,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 31,
            row_end: Some(
                31,
            ),
            col_start: 13,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: Id(
            "a",
        ),
        span: Span {
            row_start: 31,
            row_end: Some(
                31,
            ),
            col_start: 17,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 31,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 31,
            row_end: Some(
                31,
            ),
            col_start: 20,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: Id(
            "b",
        ),
        span: Span {
            row_start: 31,
            row_end: Some(
                31,
            ),
            col_start: 24,
            col_end: Some(
                25,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 31,
            row_end: None,
            col_start: 25,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 31,
            row_end: Some(
                31,
            ),
            col_start: 27,
            col_end: Some(
                34,
            ),
        },
    },
    Token {
        token_type: Id(
            "Result",
        ),
        span: Span {
            row_start: 31,
            row_end: Some(
                31,
            ),
            col_start: 35,
            col_end: Some(
                41,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 31,
            row_end: Some(
                31,
            ),
            col_start: 41,
            col_end: Some(
                42,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 31,
            row_end: Some(
                31,
            ),
            col_start: 42,
            col_end: Some(
                45,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 31,
            row_end: None,
            col_start: 45,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "string",
        ),
        span: Span {
            row_start: 31,
            row_end: Some(
                31,
            ),
            col_start: 47,
            col_end: Some(
                53,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 31,
            row_end: Some(
                31,
            ),
            col_start: 53,
            col_end: Some(
                54,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 31,
            row_end: None,
            col_start: 55,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 31,
            row_end: None,
            col_start: 56,
            col_end: None,
        },
    },
    Token {
        token_type: If,
        span: Span {
            row_start: 32,
            row_end: Some(
                32,
            ),
            col_start: 5,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: Id(
            "b",
        ),
        span: Span {
            row_start: 32,
            row_end: Some(
                32,
            ),
            col_start: 8,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: EqEq,
        span: Span {
            row_start: 32,
            row_end: Some(
                32,
            ),
            col_start: 10,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: Int(
            0,
        ),
        span: Span {
            row_start: 32,
            row_end: Some(
                32,
            ),
            col_start: 13,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 32,
            row_end: None,
            col_start: 15,
            col_end: None,
        },
    },
    Token {
        token_type: Return,
        span: Span {
            row_start: 32,
            row_end: Some(
                32,
            ),
            col_start: 17,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: Id(
            "Err",
        ),
        span: Span {
            row_start: 32,
            row_end: Some(
                32,
            ),
            col_start: 24,
            col_end: Some(
                27,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 32,
            row_end: None,
            col_start: 27,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Division by zero",
        ),
        span: Span {
            row_start: 32,
            row_end: Some(
                32,
            ),
            col_start: 28,
            col_end: Some(
                46,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 32,
            row_end: None,
            col_start: 46,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 32,
            row_end: None,
            col_start: 48,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 32,
            row_end: None,
            col_start: 49,
            col_end: None,
        },
    },
    Token {
        token_type: Return,
        span: Span {
            row_start: 33,
            row_end: Some(
                33,
            ),
            col_start: 5,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Id(
            "Ok",
        ),
        span: Span {
            row_start: 33,
            row_end: Some(
                33,
            ),
            col_start: 12,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 33,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "a",
        ),
        span: Span {
            row_start: 33,
            row_end: Some(
                33,
            ),
            col_start: 15,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: Slash,
        span: Span {
            row_start: 33,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "b",
        ),
        span: Span {
            row_start: 33,
            row_end: Some(
                33,
            ),
            col_start: 19,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 33,
            row_end: None,
            col_start: 20,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 33,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 34,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 34,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 35,
            row_end: Some(
                35,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "findEven",
        ),
        span: Span {
            row_start: 35,
            row_end: Some(
                35,
            ),
            col_start: 6,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 35,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "list",
        ),
        span: Span {
            row_start: 35,
            row_end: Some(
                35,
            ),
            col_start: 15,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 35,
            row_end: Some(
                35,
            ),
            col_start: 19,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 35,
            row_end: Some(
                35,
            ),
            col_start: 20,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 35,
            row_end: Some(
                35,
            ),
            col_start: 23,
            col_end: Some(
                24,
            ),
        },
    },
    Token {
        token_type: Id(
            "nums",
        ),
        span: Span {
            row_start: 35,
            row_end: Some(
                35,
            ),
            col_start: 25,
            col_end: Some(
                29,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 35,
            row_end: None,
            col_start: 29,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 35,
            row_end: Some(
                35,
            ),
            col_start: 31,
            col_end: Some(
                38,
            ),
        },
    },
    Token {
        token_type: Id(
            "Optional",
        ),
        span: Span {
            row_start: 35,
            row_end: Some(
                35,
            ),
            col_start: 39,
            col_end: Some(
                47,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 35,
            row_end: Some(
                35,
            ),
            col_start: 47,
            col_end: Some(
                48,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 35,
            row_end: Some(
                35,
            ),
            col_start: 48,
            col_end: Some(
                51,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 35,
            row_end: Some(
                35,
            ),
            col_start: 51,
            col_end: Some(
                52,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 35,
            row_end: None,
            col_start: 53,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 35,
            row_end: None,
            col_start: 54,
            col_end: None,
        },
    },
    Token {
        token_type: For,
        span: Span {
            row_start: 36,
            row_end: Some(
                36,
            ),
            col_start: 5,
            col_end: Some(
                8,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 36,
            row_end: Some(
                36,
            ),
            col_start: 9,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: Id(
            "n",
        ),
        span: Span {
            row_start: 36,
            row_end: Some(
                36,
            ),
            col_start: 13,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: In,
        span: Span {
            row_start: 36,
            row_end: Some(
                36,
            ),
            col_start: 15,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: Id(
            "nums",
        ),
        span: Span {
            row_start: 36,
            row_end: Some(
                36,
            ),
            col_start: 18,
            col_end: Some(
                22,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 36,
            row_end: None,
            col_start: 23,
            col_end: None,
        },
    },
    Token {
        token_type: If,
        span: Span {
            row_start: 36,
            row_end: Some(
                36,
            ),
            col_start: 25,
            col_end: Some(
                27,
            ),
        },
    },
    Token {
        token_type: Id(
            "n",
        ),
        span: Span {
            row_start: 36,
            row_end: Some(
                36,
            ),
            col_start: 28,
            col_end: Some(
                29,
            ),
        },
    },
    Token {
        token_type: Percent,
        span: Span {
            row_start: 36,
            row_end: None,
            col_start: 30,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            2,
        ),
        span: Span {
            row_start: 36,
            row_end: Some(
                36,
            ),
            col_start: 32,
            col_end: Some(
                33,
            ),
        },
    },
    Token {
        token_type: EqEq,
        span: Span {
            row_start: 36,
            row_end: Some(
                36,
            ),
            col_start: 34,
            col_end: Some(
                36,
            ),
        },
    },
    Token {
        token_type: Int(
            0,
        ),
        span: Span {
            row_start: 36,
            row_end: Some(
                36,
            ),
            col_start: 37,
            col_end: Some(
                38,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 36,
            row_end: None,
            col_start: 39,
            col_end: None,
        },
    },
    Token {
        token_type: Return,
        span: Span {
            row_start: 36,
            row_end: Some(
                36,
            ),
            col_start: 41,
            col_end: Some(
                47,
            ),
        },
    },
    Token {
        token_type: Id(
            "Some",
        ),
        span: Span {
            row_start: 36,
            row_end: Some(
                36,
            ),
            col_start: 48,
            col_end: Some(
                52,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 36,
            row_end: None,
            col_start: 52,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "n",
        ),
        span: Span {
            row_start: 36,
            row_end: Some(
                36,
            ),
            col_start: 53,
            col_end: Some(
                54,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 36,
            row_end: None,
            col_start: 54,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 36,
            row_end: None,
            col_start: 56,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 36,
            row_end: None,
            col_start: 58,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 36,
            row_end: None,
            col_start: 59,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 37,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 37,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 38,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 39,
            row_end: Some(
                39,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "map",
        ),
        span: Span {
            row_start: 39,
            row_end: Some(
                39,
            ),
            col_start: 6,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 39,
            row_end: Some(
                39,
            ),
            col_start: 9,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Id(
            "T",
        ),
        span: Span {
            row_start: 39,
            row_end: Some(
                39,
            ),
            col_start: 10,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 39,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "U",
        ),
        span: Span {
            row_start: 39,
            row_end: Some(
                39,
            ),
            col_start: 13,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 39,
            row_end: Some(
                39,
            ),
            col_start: 14,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 39,
            row_end: None,
            col_start: 15,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "list",
        ),
        span: Span {
            row_start: 39,
            row_end: Some(
                39,
            ),
            col_start: 16,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 39,
            row_end: Some(
                39,
            ),
            col_start: 20,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: Id(
            "T",
        ),
        span: Span {
            row_start: 39,
            row_end: Some(
                39,
            ),
            col_start: 21,
            col_end: Some(
                22,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 39,
            row_end: Some(
                39,
            ),
            col_start: 22,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: Id(
            "items",
        ),
        span: Span {
            row_start: 39,
            row_end: Some(
                39,
            ),
            col_start: 24,
            col_end: Some(
                29,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 39,
            row_end: None,
            col_start: 29,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 39,
            row_end: Some(
                39,
            ),
            col_start: 31,
            col_end: Some(
                35,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 39,
            row_end: None,
            col_start: 35,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "T",
        ),
        span: Span {
            row_start: 39,
            row_end: Some(
                39,
            ),
            col_start: 36,
            col_end: Some(
                37,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 39,
            row_end: None,
            col_start: 37,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 39,
            row_end: Some(
                39,
            ),
            col_start: 39,
            col_end: Some(
                46,
            ),
        },
    },
    Token {
        token_type: Id(
            "U",
        ),
        span: Span {
            row_start: 39,
            row_end: Some(
                39,
            ),
            col_start: 47,
            col_end: Some(
                48,
            ),
        },
    },
    Token {
        token_type: Id(
            "transform",
        ),
        span: Span {
            row_start: 39,
            row_end: Some(
                39,
            ),
            col_start: 49,
            col_end: Some(
                58,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 39,
            row_end: None,
            col_start: 58,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 39,
            row_end: Some(
                39,
            ),
            col_start: 60,
            col_end: Some(
                67,
            ),
        },
    },
    Token {
        token_type: Id(
            "list",
        ),
        span: Span {
            row_start: 39,
            row_end: Some(
                39,
            ),
            col_start: 68,
            col_end: Some(
                72,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 39,
            row_end: Some(
                39,
            ),
            col_start: 72,
            col_end: Some(
                73,
            ),
        },
    },
    Token {
        token_type: Id(
            "U",
        ),
        span: Span {
            row_start: 39,
            row_end: Some(
                39,
            ),
            col_start: 73,
            col_end: Some(
                74,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 39,
            row_end: Some(
                39,
            ),
            col_start: 74,
            col_end: Some(
                75,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 39,
            row_end: None,
            col_start: 76,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 39,
            row_end: None,
            col_start: 77,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 40,
            row_end: Some(
                40,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "out",
        ),
        span: Span {
            row_start: 40,
            row_end: Some(
                40,
            ),
            col_start: 10,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 40,
            row_end: Some(
                40,
            ),
            col_start: 14,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: Id(
            "list",
        ),
        span: Span {
            row_start: 40,
            row_end: Some(
                40,
            ),
            col_start: 16,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 40,
            row_end: Some(
                40,
            ),
            col_start: 20,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: Id(
            "U",
        ),
        span: Span {
            row_start: 40,
            row_end: Some(
                40,
            ),
            col_start: 21,
            col_end: Some(
                22,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 40,
            row_end: Some(
                40,
            ),
            col_start: 22,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: Dot,
        span: Span {
            row_start: 40,
            row_end: None,
            col_start: 23,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "new",
        ),
        span: Span {
            row_start: 40,
            row_end: Some(
                40,
            ),
            col_start: 24,
            col_end: Some(
                27,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 40,
            row_end: None,
            col_start: 27,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 40,
            row_end: None,
            col_start: 28,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 40,
            row_end: None,
            col_start: 29,
            col_end: None,
        },
    },
    Token {
        token_type: For,
        span: Span {
            row_start: 41,
            row_end: Some(
                41,
            ),
            col_start: 5,
            col_end: Some(
                8,
            ),
        },
    },
    Token {
        token_type: Id(
            "U",
        ),
        span: Span {
            row_start: 41,
            row_end: Some(
                41,
            ),
            col_start: 9,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Id(
            "item",
        ),
        span: Span {
            row_start: 41,
            row_end: Some(
                41,
            ),
            col_start: 11,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: In,
        span: Span {
            row_start: 41,
            row_end: Some(
                41,
            ),
            col_start: 16,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: Id(
            "items",
        ),
        span: Span {
            row_start: 41,
            row_end: Some(
                41,
            ),
            col_start: 19,
            col_end: Some(
                24,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 41,
            row_end: None,
            col_start: 25,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "out",
        ),
        span: Span {
            row_start: 41,
            row_end: Some(
                41,
            ),
            col_start: 27,
            col_end: Some(
                30,
            ),
        },
    },
    Token {
        token_type: Dot,
        span: Span {
            row_start: 41,
            row_end: None,
            col_start: 30,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "append",
        ),
        span: Span {
            row_start: 41,
            row_end: Some(
                41,
            ),
            col_start: 31,
            col_end: Some(
                37,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 41,
            row_end: None,
            col_start: 37,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "transform",
        ),
        span: Span {
            row_start: 41,
            row_end: Some(
                41,
            ),
            col_start: 38,
            col_end: Some(
                47,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 41,
            row_end: None,
            col_start: 47,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "item",
        ),
        span: Span {
            row_start: 41,
            row_end: Some(
                41,
            ),
            col_start: 48,
            col_end: Some(
                52,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 41,
            row_end: None,
            col_start: 52,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 41,
            row_end: None,
            col_start: 53,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 41,
            row_end: None,
            col_start: 55,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 41,
            row_end: None,
            col_start: 56,
            col_end: None,
        },
    },
    Token {
        token_type: Return,
        span: Span {
            row_start: 42,
            row_end: Some(
                42,
            ),
            col_start: 5,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Id(
            "out",
        ),
        span: Span {
            row_start: 42,
            row_end: Some(
                42,
            ),
            col_start: 12,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 42,
            row_end: None,
            col_start: 15,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 43,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 43,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 44,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 45,
            row_end: Some(
                45,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "main",
        ),
        span: Span {
            row_start: 45,
            row_end: Some(
                45,
            ),
            col_start: 6,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 45,
            row_end: None,
            col_start: 10,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 45,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 45,
            row_end: Some(
                45,
            ),
            col_start: 13,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: Id(
            "void",
        ),
        span: Span {
            row_start: 45,
            row_end: Some(
                45,
            ),
            col_start: 21,
            col_end: Some(
                25,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 45,
            row_end: None,
            col_start: 26,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 45,
            row_end: None,
            col_start: 27,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 46,
            row_end: Some(
                46,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "explicit",
        ),
        span: Span {
            row_start: 46,
            row_end: Some(
                46,
            ),
            col_start: 10,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 46,
            row_end: Some(
                46,
            ),
            col_start: 19,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: Int(
            10,
        ),
        span: Span {
            row_start: 46,
            row_end: Some(
                46,
            ),
            col_start: 21,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 46,
            row_end: None,
            col_start: 23,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 47,
            row_end: Some(
                47,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "inferred",
        ),
        span: Span {
            row_start: 47,
            row_end: Some(
                47,
            ),
            col_start: 10,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 47,
            row_end: Some(
                47,
            ),
            col_start: 19,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: Int(
            42,
        ),
        span: Span {
            row_start: 47,
            row_end: Some(
                47,
            ),
            col_start: 21,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 47,
            row_end: None,
            col_start: 23,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 48,
            row_end: Some(
                48,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "floatVal",
        ),
        span: Span {
            row_start: 48,
            row_end: Some(
                48,
            ),
            col_start: 10,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 48,
            row_end: Some(
                48,
            ),
            col_start: 19,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: Float(
            9.4,
        ),
        span: Span {
            row_start: 48,
            row_end: Some(
                48,
            ),
            col_start: 21,
            col_end: Some(
                24,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 48,
            row_end: None,
            col_start: 24,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 49,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: If,
        span: Span {
            row_start: 50,
            row_end: Some(
                50,
            ),
            col_start: 5,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: Id(
            "inferred",
        ),
        span: Span {
            row_start: 50,
            row_end: Some(
                50,
            ),
            col_start: 8,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 50,
            row_end: Some(
                50,
            ),
            col_start: 17,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: Int(
            40,
        ),
        span: Span {
            row_start: 50,
            row_end: Some(
                50,
            ),
            col_start: 19,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 50,
            row_end: None,
            col_start: 22,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 50,
            row_end: Some(
                50,
            ),
            col_start: 24,
            col_end: Some(
                29,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 50,
            row_end: None,
            col_start: 29,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Big number",
        ),
        span: Span {
            row_start: 50,
            row_end: Some(
                50,
            ),
            col_start: 30,
            col_end: Some(
                42,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 50,
            row_end: None,
            col_start: 42,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 50,
            row_end: None,
            col_start: 44,
            col_end: None,
        },
    },
    Token {
        token_type: Else,
        span: Span {
            row_start: 50,
            row_end: Some(
                50,
            ),
            col_start: 46,
            col_end: Some(
                50,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 50,
            row_end: None,
            col_start: 51,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 50,
            row_end: Some(
                50,
            ),
            col_start: 53,
            col_end: Some(
                58,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 50,
            row_end: None,
            col_start: 58,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Small number",
        ),
        span: Span {
            row_start: 50,
            row_end: Some(
                50,
            ),
            col_start: 59,
            col_end: Some(
                73,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 50,
            row_end: None,
            col_start: 73,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 50,
            row_end: None,
            col_start: 75,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 50,
            row_end: None,
            col_start: 76,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 51,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 52,
            row_end: Some(
                52,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "maybeNum",
        ),
        span: Span {
            row_start: 52,
            row_end: Some(
                52,
            ),
            col_start: 10,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 52,
            row_end: Some(
                52,
            ),
            col_start: 19,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: Id(
            "Some",
        ),
        span: Span {
            row_start: 52,
            row_end: Some(
                52,
            ),
            col_start: 21,
            col_end: Some(
                25,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 52,
            row_end: None,
            col_start: 25,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            15,
        ),
        span: Span {
            row_start: 52,
            row_end: Some(
                52,
            ),
            col_start: 26,
            col_end: Some(
                28,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 52,
            row_end: None,
            col_start: 28,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 52,
            row_end: None,
            col_start: 29,
            col_end: None,
        },
    },
    Token {
        token_type: Match,
        span: Span {
            row_start: 53,
            row_end: Some(
                53,
            ),
            col_start: 5,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Id(
            "maybeNum",
        ),
        span: Span {
            row_start: 53,
            row_end: Some(
                53,
            ),
            col_start: 11,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 53,
            row_end: None,
            col_start: 20,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 53,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "Some",
        ),
        span: Span {
            row_start: 54,
            row_end: Some(
                54,
            ),
            col_start: 9,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 54,
            row_end: None,
            col_start: 13,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "v",
        ),
        span: Span {
            row_start: 54,
            row_end: Some(
                54,
            ),
            col_start: 14,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 54,
            row_end: None,
            col_start: 15,
            col_end: None,
        },
    },
    Token {
        token_type: If,
        span: Span {
            row_start: 54,
            row_end: Some(
                54,
            ),
            col_start: 17,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: Id(
            "v",
        ),
        span: Span {
            row_start: 54,
            row_end: Some(
                54,
            ),
            col_start: 20,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 54,
            row_end: Some(
                54,
            ),
            col_start: 22,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: Int(
            10,
        ),
        span: Span {
            row_start: 54,
            row_end: Some(
                54,
            ),
            col_start: 24,
            col_end: Some(
                26,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 54,
            row_end: None,
            col_start: 27,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 54,
            row_end: Some(
                54,
            ),
            col_start: 29,
            col_end: Some(
                34,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 54,
            row_end: None,
            col_start: 34,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Large value: ",
        ),
        span: Span {
            row_start: 54,
            row_end: Some(
                54,
            ),
            col_start: 35,
            col_end: Some(
                50,
            ),
        },
    },
    Token {
        token_type: Plus,
        span: Span {
            row_start: 54,
            row_end: Some(
                54,
            ),
            col_start: 51,
            col_end: Some(
                52,
            ),
        },
    },
    Token {
        token_type: Id(
            "v",
        ),
        span: Span {
            row_start: 54,
            row_end: Some(
                54,
            ),
            col_start: 53,
            col_end: Some(
                54,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 54,
            row_end: None,
            col_start: 54,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 54,
            row_end: None,
            col_start: 56,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 54,
            row_end: None,
            col_start: 57,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "Some",
        ),
        span: Span {
            row_start: 55,
            row_end: Some(
                55,
            ),
            col_start: 9,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 55,
            row_end: None,
            col_start: 13,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "v",
        ),
        span: Span {
            row_start: 55,
            row_end: Some(
                55,
            ),
            col_start: 14,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 55,
            row_end: None,
            col_start: 15,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 55,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 55,
            row_end: Some(
                55,
            ),
            col_start: 19,
            col_end: Some(
                24,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 55,
            row_end: None,
            col_start: 24,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Small value: ",
        ),
        span: Span {
            row_start: 55,
            row_end: Some(
                55,
            ),
            col_start: 25,
            col_end: Some(
                40,
            ),
        },
    },
    Token {
        token_type: Plus,
        span: Span {
            row_start: 55,
            row_end: Some(
                55,
            ),
            col_start: 41,
            col_end: Some(
                42,
            ),
        },
    },
    Token {
        token_type: Id(
            "v",
        ),
        span: Span {
            row_start: 55,
            row_end: Some(
                55,
            ),
            col_start: 43,
            col_end: Some(
                44,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 55,
            row_end: None,
            col_start: 44,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 55,
            row_end: None,
            col_start: 46,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 55,
            row_end: None,
            col_start: 47,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "None",
        ),
        span: Span {
            row_start: 56,
            row_end: Some(
                56,
            ),
            col_start: 9,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 56,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 56,
            row_end: Some(
                56,
            ),
            col_start: 16,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 56,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "No value",
        ),
        span: Span {
            row_start: 56,
            row_end: Some(
                56,
            ),
            col_start: 22,
            col_end: Some(
                32,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 56,
            row_end: None,
            col_start: 32,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 56,
            row_end: None,
            col_start: 34,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 56,
            row_end: None,
            col_start: 35,
            col_end: None,
        },
    },
    Token {
        token_type: Underscore,
        span: Span {
            row_start: 57,
            row_end: None,
            col_start: 9,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 57,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 57,
            row_end: Some(
                57,
            ),
            col_start: 13,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 57,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Unexpected",
        ),
        span: Span {
            row_start: 57,
            row_end: Some(
                57,
            ),
            col_start: 19,
            col_end: Some(
                31,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 57,
            row_end: None,
            col_start: 31,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 57,
            row_end: None,
            col_start: 33,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 57,
            row_end: None,
            col_start: 34,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 58,
            row_end: None,
            col_start: 5,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 58,
            row_end: None,
            col_start: 6,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 59,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 60,
            row_end: Some(
                60,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "nums",
        ),
        span: Span {
            row_start: 60,
            row_end: Some(
                60,
            ),
            col_start: 10,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 60,
            row_end: Some(
                60,
            ),
            col_start: 15,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: OpenBracket,
        span: Span {
            row_start: 60,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            1,
        ),
        span: Span {
            row_start: 60,
            row_end: Some(
                60,
            ),
            col_start: 18,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 60,
            row_end: None,
            col_start: 19,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            2,
        ),
        span: Span {
            row_start: 60,
            row_end: Some(
                60,
            ),
            col_start: 21,
            col_end: Some(
                22,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 60,
            row_end: None,
            col_start: 22,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            3,
        ),
        span: Span {
            row_start: 60,
            row_end: Some(
                60,
            ),
            col_start: 24,
            col_end: Some(
                25,
            ),
        },
    },
    Token {
        token_type: CloseBracket,
        span: Span {
            row_start: 60,
            row_end: None,
            col_start: 25,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 60,
            row_end: None,
            col_start: 26,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 61,
            row_end: Some(
                61,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "cirs",
        ),
        span: Span {
            row_start: 61,
            row_end: Some(
                61,
            ),
            col_start: 10,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 61,
            row_end: Some(
                61,
            ),
            col_start: 15,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: OpenBracket,
        span: Span {
            row_start: 61,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "Circle",
        ),
        span: Span {
            row_start: 61,
            row_end: Some(
                61,
            ),
            col_start: 18,
            col_end: Some(
                24,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 61,
            row_end: None,
            col_start: 24,
            col_end: None,
        },
    },
    Token {
        token_type: Float(
            2.0,
        ),
        span: Span {
            row_start: 61,
            row_end: Some(
                61,
            ),
            col_start: 25,
            col_end: Some(
                28,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 61,
            row_end: None,
            col_start: 28,
            col_end: None,
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 61,
            row_end: None,
            col_start: 29,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "Circle",
        ),
        span: Span {
            row_start: 61,
            row_end: Some(
                61,
            ),
            col_start: 31,
            col_end: Some(
                37,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 61,
            row_end: None,
            col_start: 37,
            col_end: None,
        },
    },
    Token {
        token_type: Float(
            3.5,
        ),
        span: Span {
            row_start: 61,
            row_end: Some(
                61,
            ),
            col_start: 38,
            col_end: Some(
                41,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 61,
            row_end: None,
            col_start: 41,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBracket,
        span: Span {
            row_start: 61,
            row_end: None,
            col_start: 42,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 61,
            row_end: None,
            col_start: 43,
            col_end: None,
        },
    },
    Token {
        token_type: For,
        span: Span {
            row_start: 62,
            row_end: Some(
                62,
            ),
            col_start: 5,
            col_end: Some(
                8,
            ),
        },
    },
    Token {
        token_type: Id(
            "Circle",
        ),
        span: Span {
            row_start: 62,
            row_end: Some(
                62,
            ),
            col_start: 9,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: Id(
            "c",
        ),
        span: Span {
            row_start: 62,
            row_end: Some(
                62,
            ),
            col_start: 16,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: In,
        span: Span {
            row_start: 62,
            row_end: Some(
                62,
            ),
            col_start: 18,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: Id(
            "cirs",
        ),
        span: Span {
            row_start: 62,
            row_end: Some(
                62,
            ),
            col_start: 21,
            col_end: Some(
                25,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 62,
            row_end: None,
            col_start: 26,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "c",
        ),
        span: Span {
            row_start: 62,
            row_end: Some(
                62,
            ),
            col_start: 28,
            col_end: Some(
                29,
            ),
        },
    },
    Token {
        token_type: Dot,
        span: Span {
            row_start: 62,
            row_end: None,
            col_start: 29,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "draw",
        ),
        span: Span {
            row_start: 62,
            row_end: Some(
                62,
            ),
            col_start: 30,
            col_end: Some(
                34,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 62,
            row_end: None,
            col_start: 34,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 62,
            row_end: None,
            col_start: 35,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 62,
            row_end: None,
            col_start: 37,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 62,
            row_end: None,
            col_start: 38,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 63,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 64,
            row_end: Some(
                64,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "maximum",
        ),
        span: Span {
            row_start: 64,
            row_end: Some(
                64,
            ),
            col_start: 10,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 64,
            row_end: Some(
                64,
            ),
            col_start: 18,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: Id(
            "max",
        ),
        span: Span {
            row_start: 64,
            row_end: Some(
                64,
            ),
            col_start: 20,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 64,
            row_end: None,
            col_start: 23,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            7,
        ),
        span: Span {
            row_start: 64,
            row_end: Some(
                64,
            ),
            col_start: 24,
            col_end: Some(
                25,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 64,
            row_end: None,
            col_start: 25,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            12,
        ),
        span: Span {
            row_start: 64,
            row_end: Some(
                64,
            ),
            col_start: 27,
            col_end: Some(
                29,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 64,
            row_end: None,
            col_start: 29,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 64,
            row_end: None,
            col_start: 30,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 65,
            row_end: Some(
                65,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "stack",
        ),
        span: Span {
            row_start: 65,
            row_end: Some(
                65,
            ),
            col_start: 10,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 65,
            row_end: Some(
                65,
            ),
            col_start: 16,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: Id(
            "Stack",
        ),
        span: Span {
            row_start: 65,
            row_end: Some(
                65,
            ),
            col_start: 18,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 65,
            row_end: Some(
                65,
            ),
            col_start: 23,
            col_end: Some(
                24,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 65,
            row_end: Some(
                65,
            ),
            col_start: 24,
            col_end: Some(
                27,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 65,
            row_end: Some(
                65,
            ),
            col_start: 27,
            col_end: Some(
                28,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 65,
            row_end: None,
            col_start: 28,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 65,
            row_end: None,
            col_start: 29,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 65,
            row_end: None,
            col_start: 30,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "stack",
        ),
        span: Span {
            row_start: 66,
            row_end: Some(
                66,
            ),
            col_start: 5,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Dot,
        span: Span {
            row_start: 66,
            row_end: None,
            col_start: 10,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "push",
        ),
        span: Span {
            row_start: 66,
            row_end: Some(
                66,
            ),
            col_start: 11,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 66,
            row_end: None,
            col_start: 15,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            99,
        ),
        span: Span {
            row_start: 66,
            row_end: Some(
                66,
            ),
            col_start: 16,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 66,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 66,
            row_end: None,
            col_start: 19,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 67,
            row_end: Some(
                67,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "popped",
        ),
        span: Span {
            row_start: 67,
            row_end: Some(
                67,
            ),
            col_start: 10,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 67,
            row_end: Some(
                67,
            ),
            col_start: 17,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: Id(
            "stack",
        ),
        span: Span {
            row_start: 67,
            row_end: Some(
                67,
            ),
            col_start: 19,
            col_end: Some(
                24,
            ),
        },
    },
    Token {
        token_type: Dot,
        span: Span {
            row_start: 67,
            row_end: None,
            col_start: 24,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "pop",
        ),
        span: Span {
            row_start: 67,
            row_end: Some(
                67,
            ),
            col_start: 25,
            col_end: Some(
                28,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 67,
            row_end: None,
            col_start: 28,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 67,
            row_end: None,
            col_start: 29,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 67,
            row_end: None,
            col_start: 30,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 68,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 69,
            row_end: Some(
                69,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "res",
        ),
        span: Span {
            row_start: 69,
            row_end: Some(
                69,
            ),
            col_start: 10,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 69,
            row_end: Some(
                69,
            ),
            col_start: 14,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: Id(
            "divide",
        ),
        span: Span {
            row_start: 69,
            row_end: Some(
                69,
            ),
            col_start: 16,
            col_end: Some(
                22,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 69,
            row_end: None,
            col_start: 22,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            10,
        ),
        span: Span {
            row_start: 69,
            row_end: Some(
                69,
            ),
            col_start: 23,
            col_end: Some(
                25,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 69,
            row_end: None,
            col_start: 25,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            2,
        ),
        span: Span {
            row_start: 69,
            row_end: Some(
                69,
            ),
            col_start: 27,
            col_end: Some(
                28,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 69,
            row_end: None,
            col_start: 28,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 69,
            row_end: None,
            col_start: 29,
            col_end: None,
        },
    },
    Token {
        token_type: Match,
        span: Span {
            row_start: 70,
            row_end: Some(
                70,
            ),
            col_start: 5,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Id(
            "res",
        ),
        span: Span {
            row_start: 70,
            row_end: Some(
                70,
            ),
            col_start: 11,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 70,
            row_end: None,
            col_start: 15,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "Ok",
        ),
        span: Span {
            row_start: 70,
            row_end: Some(
                70,
            ),
            col_start: 17,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 70,
            row_end: None,
            col_start: 19,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "v",
        ),
        span: Span {
            row_start: 70,
            row_end: Some(
                70,
            ),
            col_start: 20,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 70,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 70,
            row_end: None,
            col_start: 23,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 70,
            row_end: Some(
                70,
            ),
            col_start: 25,
            col_end: Some(
                30,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 70,
            row_end: None,
            col_start: 30,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "v",
        ),
        span: Span {
            row_start: 70,
            row_end: Some(
                70,
            ),
            col_start: 31,
            col_end: Some(
                32,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 70,
            row_end: None,
            col_start: 32,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 70,
            row_end: None,
            col_start: 34,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "Err",
        ),
        span: Span {
            row_start: 70,
            row_end: Some(
                70,
            ),
            col_start: 36,
            col_end: Some(
                39,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 70,
            row_end: None,
            col_start: 39,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "e",
        ),
        span: Span {
            row_start: 70,
            row_end: Some(
                70,
            ),
            col_start: 40,
            col_end: Some(
                41,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 70,
            row_end: None,
            col_start: 41,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 70,
            row_end: None,
            col_start: 43,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 70,
            row_end: Some(
                70,
            ),
            col_start: 45,
            col_end: Some(
                50,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 70,
            row_end: None,
            col_start: 50,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "e",
        ),
        span: Span {
            row_start: 70,
            row_end: Some(
                70,
            ),
            col_start: 51,
            col_end: Some(
                52,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 70,
            row_end: None,
            col_start: 52,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 70,
            row_end: None,
            col_start: 54,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 70,
            row_end: None,
            col_start: 56,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 70,
            row_end: None,
            col_start: 57,
            col_end: None,
        },
    },
    Token {
        token_type: Match,
        span: Span {
            row_start: 71,
            row_end: Some(
                71,
            ),
            col_start: 5,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Id(
            "res",
        ),
        span: Span {
            row_start: 71,
            row_end: Some(
                71,
            ),
            col_start: 11,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 71,
            row_end: None,
            col_start: 15,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 71,
            row_end: None,
            col_start: 16,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "Ok",
        ),
        span: Span {
            row_start: 72,
            row_end: Some(
                72,
            ),
            col_start: 9,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 72,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "v",
        ),
        span: Span {
            row_start: 72,
            row_end: Some(
                72,
            ),
            col_start: 12,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 72,
            row_end: None,
            col_start: 13,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 72,
            row_end: None,
            col_start: 15,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 72,
            row_end: None,
            col_start: 16,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 73,
            row_end: Some(
                73,
            ),
            col_start: 13,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 73,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "got a good val",
        ),
        span: Span {
            row_start: 73,
            row_end: Some(
                73,
            ),
            col_start: 19,
            col_end: Some(
                35,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 73,
            row_end: None,
            col_start: 35,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 73,
            row_end: None,
            col_start: 36,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 74,
            row_end: None,
            col_start: 9,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 74,
            row_end: None,
            col_start: 10,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "Err",
        ),
        span: Span {
            row_start: 75,
            row_end: Some(
                75,
            ),
            col_start: 9,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 75,
            row_end: None,
            col_start: 12,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "e",
        ),
        span: Span {
            row_start: 75,
            row_end: Some(
                75,
            ),
            col_start: 13,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 75,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 75,
            row_end: None,
            col_start: 16,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 75,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 76,
            row_end: Some(
                76,
            ),
            col_start: 13,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 76,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "got a bad val",
        ),
        span: Span {
            row_start: 76,
            row_end: Some(
                76,
            ),
            col_start: 19,
            col_end: Some(
                34,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 76,
            row_end: None,
            col_start: 34,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 76,
            row_end: None,
            col_start: 35,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 77,
            row_end: None,
            col_start: 9,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 77,
            row_end: None,
            col_start: 10,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 78,
            row_end: None,
            col_start: 5,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 78,
            row_end: None,
            col_start: 6,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 79,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 80,
            row_end: Some(
                80,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "maybeEven",
        ),
        span: Span {
            row_start: 80,
            row_end: Some(
                80,
            ),
            col_start: 10,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 80,
            row_end: Some(
                80,
            ),
            col_start: 20,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: Id(
            "findEven",
        ),
        span: Span {
            row_start: 80,
            row_end: Some(
                80,
            ),
            col_start: 22,
            col_end: Some(
                30,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 80,
            row_end: None,
            col_start: 30,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBracket,
        span: Span {
            row_start: 80,
            row_end: None,
            col_start: 31,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            1,
        ),
        span: Span {
            row_start: 80,
            row_end: Some(
                80,
            ),
            col_start: 32,
            col_end: Some(
                33,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 80,
            row_end: None,
            col_start: 33,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            3,
        ),
        span: Span {
            row_start: 80,
            row_end: Some(
                80,
            ),
            col_start: 35,
            col_end: Some(
                36,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 80,
            row_end: None,
            col_start: 36,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            4,
        ),
        span: Span {
            row_start: 80,
            row_end: Some(
                80,
            ),
            col_start: 38,
            col_end: Some(
                39,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 80,
            row_end: None,
            col_start: 39,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            7,
        ),
        span: Span {
            row_start: 80,
            row_end: Some(
                80,
            ),
            col_start: 41,
            col_end: Some(
                42,
            ),
        },
    },
    Token {
        token_type: CloseBracket,
        span: Span {
            row_start: 80,
            row_end: None,
            col_start: 42,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 80,
            row_end: None,
            col_start: 43,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 80,
            row_end: None,
            col_start: 44,
            col_end: None,
        },
    },
    Token {
        token_type: Match,
        span: Span {
            row_start: 81,
            row_end: Some(
                81,
            ),
            col_start: 5,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Id(
            "maybeEven",
        ),
        span: Span {
            row_start: 81,
            row_end: Some(
                81,
            ),
            col_start: 11,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 81,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "Some",
        ),
        span: Span {
            row_start: 81,
            row_end: Some(
                81,
            ),
            col_start: 23,
            col_end: Some(
                27,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 81,
            row_end: None,
            col_start: 27,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "v",
        ),
        span: Span {
            row_start: 81,
            row_end: Some(
                81,
            ),
            col_start: 28,
            col_end: Some(
                29,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 81,
            row_end: None,
            col_start: 29,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 81,
            row_end: None,
            col_start: 31,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 81,
            row_end: Some(
                81,
            ),
            col_start: 33,
            col_end: Some(
                38,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 81,
            row_end: None,
            col_start: 38,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "v",
        ),
        span: Span {
            row_start: 81,
            row_end: Some(
                81,
            ),
            col_start: 39,
            col_end: Some(
                40,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 81,
            row_end: None,
            col_start: 40,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 81,
            row_end: None,
            col_start: 42,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "None",
        ),
        span: Span {
            row_start: 81,
            row_end: Some(
                81,
            ),
            col_start: 44,
            col_end: Some(
                48,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 81,
            row_end: None,
            col_start: 49,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 81,
            row_end: Some(
                81,
            ),
            col_start: 51,
            col_end: Some(
                56,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 81,
            row_end: None,
            col_start: 56,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "None",
        ),
        span: Span {
            row_start: 81,
            row_end: Some(
                81,
            ),
            col_start: 57,
            col_end: Some(
                63,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 81,
            row_end: None,
            col_start: 63,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 81,
            row_end: None,
            col_start: 65,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 81,
            row_end: None,
            col_start: 67,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 81,
            row_end: None,
            col_start: 68,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 82,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 83,
            row_end: Some(
                83,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "square",
        ),
        span: Span {
            row_start: 83,
            row_end: Some(
                83,
            ),
            col_start: 10,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 83,
            row_end: Some(
                83,
            ),
            col_start: 17,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 83,
            row_end: Some(
                83,
            ),
            col_start: 19,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 83,
            row_end: None,
            col_start: 23,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 83,
            row_end: Some(
                83,
            ),
            col_start: 24,
            col_end: Some(
                27,
            ),
        },
    },
    Token {
        token_type: Id(
            "n",
        ),
        span: Span {
            row_start: 83,
            row_end: Some(
                83,
            ),
            col_start: 28,
            col_end: Some(
                29,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 83,
            row_end: None,
            col_start: 29,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 83,
            row_end: Some(
                83,
            ),
            col_start: 31,
            col_end: Some(
                38,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 83,
            row_end: Some(
                83,
            ),
            col_start: 39,
            col_end: Some(
                42,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 83,
            row_end: None,
            col_start: 43,
            col_end: None,
        },
    },
    Token {
        token_type: Return,
        span: Span {
            row_start: 83,
            row_end: Some(
                83,
            ),
            col_start: 45,
            col_end: Some(
                51,
            ),
        },
    },
    Token {
        token_type: Id(
            "n",
        ),
        span: Span {
            row_start: 83,
            row_end: Some(
                83,
            ),
            col_start: 52,
            col_end: Some(
                53,
            ),
        },
    },
    Token {
        token_type: Star,
        span: Span {
            row_start: 83,
            row_end: Some(
                83,
            ),
            col_start: 54,
            col_end: Some(
                55,
            ),
        },
    },
    Token {
        token_type: Id(
            "n",
        ),
        span: Span {
            row_start: 83,
            row_end: Some(
                83,
            ),
            col_start: 56,
            col_end: Some(
                57,
            ),
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 83,
            row_end: None,
            col_start: 58,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 83,
            row_end: None,
            col_start: 59,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 84,
            row_end: Some(
                84,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "doubled",
        ),
        span: Span {
            row_start: 84,
            row_end: Some(
                84,
            ),
            col_start: 10,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 84,
            row_end: Some(
                84,
            ),
            col_start: 18,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: Id(
            "map",
        ),
        span: Span {
            row_start: 84,
            row_end: Some(
                84,
            ),
            col_start: 20,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 84,
            row_end: None,
            col_start: 23,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBracket,
        span: Span {
            row_start: 84,
            row_end: None,
            col_start: 24,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            1,
        ),
        span: Span {
            row_start: 84,
            row_end: Some(
                84,
            ),
            col_start: 25,
            col_end: Some(
                26,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 84,
            row_end: None,
            col_start: 26,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            2,
        ),
        span: Span {
            row_start: 84,
            row_end: Some(
                84,
            ),
            col_start: 28,
            col_end: Some(
                29,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 84,
            row_end: None,
            col_start: 29,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            3,
        ),
        span: Span {
            row_start: 84,
            row_end: Some(
                84,
            ),
            col_start: 31,
            col_end: Some(
                32,
            ),
        },
    },
    Token {
        token_type: CloseBracket,
        span: Span {
            row_start: 84,
            row_end: None,
            col_start: 32,
            col_end: None,
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 84,
            row_end: None,
            col_start: 33,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 84,
            row_end: Some(
                84,
            ),
            col_start: 35,
            col_end: Some(
                39,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 84,
            row_end: None,
            col_start: 39,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 84,
            row_end: Some(
                84,
            ),
            col_start: 40,
            col_end: Some(
                43,
            ),
        },
    },
    Token {
        token_type: Id(
            "x",
        ),
        span: Span {
            row_start: 84,
            row_end: Some(
                84,
            ),
            col_start: 44,
            col_end: Some(
                45,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 84,
            row_end: None,
            col_start: 45,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 84,
            row_end: Some(
                84,
            ),
            col_start: 47,
            col_end: Some(
                54,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 84,
            row_end: Some(
                84,
            ),
            col_start: 55,
            col_end: Some(
                58,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 84,
            row_end: None,
            col_start: 59,
            col_end: None,
        },
    },
    Token {
        token_type: Return,
        span: Span {
            row_start: 84,
            row_end: Some(
                84,
            ),
            col_start: 61,
            col_end: Some(
                67,
            ),
        },
    },
    Token {
        token_type: Id(
            "x",
        ),
        span: Span {
            row_start: 84,
            row_end: Some(
                84,
            ),
            col_start: 68,
            col_end: Some(
                69,
            ),
        },
    },
    Token {
        token_type: Star,
        span: Span {
            row_start: 84,
            row_end: Some(
                84,
            ),
            col_start: 70,
            col_end: Some(
                71,
            ),
        },
    },
    Token {
        token_type: Int(
            2,
        ),
        span: Span {
            row_start: 84,
            row_end: Some(
                84,
            ),
            col_start: 72,
            col_end: Some(
                73,
            ),
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 84,
            row_end: None,
            col_start: 74,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 84,
            row_end: None,
            col_start: 75,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 84,
            row_end: None,
            col_start: 76,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 85,
            row_end: Some(
                85,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "squared",
        ),
        span: Span {
            row_start: 85,
            row_end: Some(
                85,
            ),
            col_start: 10,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 85,
            row_end: Some(
                85,
            ),
            col_start: 18,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: Id(
            "map",
        ),
        span: Span {
            row_start: 85,
            row_end: Some(
                85,
            ),
            col_start: 20,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 85,
            row_end: None,
            col_start: 23,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBracket,
        span: Span {
            row_start: 85,
            row_end: None,
            col_start: 24,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            1,
        ),
        span: Span {
            row_start: 85,
            row_end: Some(
                85,
            ),
            col_start: 25,
            col_end: Some(
                26,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 85,
            row_end: None,
            col_start: 26,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            2,
        ),
        span: Span {
            row_start: 85,
            row_end: Some(
                85,
            ),
            col_start: 28,
            col_end: Some(
                29,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 85,
            row_end: None,
            col_start: 29,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            3,
        ),
        span: Span {
            row_start: 85,
            row_end: Some(
                85,
            ),
            col_start: 31,
            col_end: Some(
                32,
            ),
        },
    },
    Token {
        token_type: CloseBracket,
        span: Span {
            row_start: 85,
            row_end: None,
            col_start: 32,
            col_end: None,
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 85,
            row_end: None,
            col_start: 33,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "square",
        ),
        span: Span {
            row_start: 85,
            row_end: Some(
                85,
            ),
            col_start: 35,
            col_end: Some(
                41,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 85,
            row_end: None,
            col_start: 41,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 85,
            row_end: None,
            col_start: 42,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 86,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 87,
            row_end: Some(
                87,
            ),
            col_start: 5,
            col_end: Some(
                8,
            ),
        },
    },
    Token {
        token_type: Id(
            "val",
        ),
        span: Span {
            row_start: 87,
            row_end: Some(
                87,
            ),
            col_start: 9,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 87,
            row_end: Some(
                87,
            ),
            col_start: 13,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: Int(
            10,
        ),
        span: Span {
            row_start: 87,
            row_end: Some(
                87,
            ),
            col_start: 15,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 87,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 88,
            row_end: Some(
                88,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "p",
        ),
        span: Span {
            row_start: 88,
            row_end: Some(
                88,
            ),
            col_start: 10,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 88,
            row_end: Some(
                88,
            ),
            col_start: 12,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: Ref,
        span: Span {
            row_start: 88,
            row_end: Some(
                88,
            ),
            col_start: 14,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: Id(
            "val",
        ),
        span: Span {
            row_start: 88,
            row_end: Some(
                88,
            ),
            col_start: 15,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 88,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: Star,
        span: Span {
            row_start: 89,
            row_end: Some(
                89,
            ),
            col_start: 5,
            col_end: Some(
                6,
            ),
        },
    },
    Token {
        token_type: Id(
            "p",
        ),
        span: Span {
            row_start: 89,
            row_end: Some(
                89,
            ),
            col_start: 6,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 89,
            row_end: Some(
                89,
            ),
            col_start: 8,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Int(
            20,
        ),
        span: Span {
            row_start: 89,
            row_end: Some(
                89,
            ),
            col_start: 10,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 89,
            row_end: None,
            col_start: 12,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 90,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 90,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: LineComment(
            "Functions and lambdas",
        ),
        span: Span {
            row_start: 1,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 1,
            row_end: None,
            col_start: 25,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "add",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 6,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 9,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 10,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: Id(
            "a",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 14,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 15,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 17,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: Id(
            "b",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 21,
            col_end: Some(
                22,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 22,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 24,
            col_end: Some(
                31,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 32,
            col_end: Some(
                35,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 36,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 37,
            col_end: None,
        },
    },
    Token {
        token_type: Return,
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 5,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Id(
            "a",
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 12,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: Plus,
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 14,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: Id(
            "b",
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 16,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 5,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "greet",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 6,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "string",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 12,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: Id(
            "name",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 19,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 23,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 25,
            col_end: Some(
                28,
            ),
        },
    },
    Token {
        token_type: Id(
            "times",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 29,
            col_end: Some(
                34,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 35,
            col_end: Some(
                36,
            ),
        },
    },
    Token {
        token_type: Int(
            1,
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 37,
            col_end: Some(
                38,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 38,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 40,
            col_end: Some(
                47,
            ),
        },
    },
    Token {
        token_type: Id(
            "void",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 48,
            col_end: Some(
                52,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 53,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 54,
            col_end: None,
        },
    },
    Token {
        token_type: For,
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 5,
            col_end: Some(
                8,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 9,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: Id(
            "i",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 13,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: In,
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 15,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: Id(
            "range",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 18,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 23,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            0,
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 24,
            col_end: Some(
                25,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 25,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "times",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 27,
            col_end: Some(
                32,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 32,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 34,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 36,
            col_end: Some(
                41,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 41,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Hello ",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 42,
            col_end: Some(
                50,
            ),
        },
    },
    Token {
        token_type: Plus,
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 51,
            col_end: Some(
                52,
            ),
        },
    },
    Token {
        token_type: Id(
            "name",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 53,
            col_end: Some(
                57,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 57,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 59,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 60,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 9,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: LineComment(
            "Lambda examples",
        ),
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 19,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "square",
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 6,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 13,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 15,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 20,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 21,
            col_end: Some(
                24,
            ),
        },
    },
    Token {
        token_type: Id(
            "n",
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 25,
            col_end: Some(
                26,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 26,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 28,
            col_end: Some(
                35,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 36,
            col_end: Some(
                39,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 40,
            col_end: None,
        },
    },
    Token {
        token_type: Return,
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 42,
            col_end: Some(
                48,
            ),
        },
    },
    Token {
        token_type: Id(
            "n",
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 49,
            col_end: Some(
                50,
            ),
        },
    },
    Token {
        token_type: Star,
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 51,
            col_end: Some(
                52,
            ),
        },
    },
    Token {
        token_type: Id(
            "n",
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 53,
            col_end: Some(
                54,
            ),
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 55,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 56,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "doubled",
        ),
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 6,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 14,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 16,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 12,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "float",
        ),
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 22,
            col_end: Some(
                27,
            ),
        },
    },
    Token {
        token_type: Id(
            "x",
        ),
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 28,
            col_end: Some(
                29,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 12,
            row_end: None,
            col_start: 29,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 31,
            col_end: Some(
                38,
            ),
        },
    },
    Token {
        token_type: Id(
            "float",
        ),
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 39,
            col_end: Some(
                44,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 12,
            row_end: None,
            col_start: 45,
            col_end: None,
        },
    },
    Token {
        token_type: Return,
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 47,
            col_end: Some(
                53,
            ),
        },
    },
    Token {
        token_type: Id(
            "x",
        ),
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 54,
            col_end: Some(
                55,
            ),
        },
    },
    Token {
        token_type: Star,
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 56,
            col_end: Some(
                57,
            ),
        },
    },
    Token {
        token_type: Int(
            2,
        ),
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 58,
            col_end: Some(
                59,
            ),
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 12,
            row_end: None,
            col_start: 60,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 12,
            row_end: None,
            col_start: 61,
            col_end: None,
        },
    },
    Token {
        token_type: LineComment(
            "Generics",
        ),
        span: Span {
            row_start: 1,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 1,
            row_end: None,
            col_start: 12,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "max",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 6,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 9,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Id(
            "T",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 10,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Is,
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 12,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: Id(
            "comparable",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 15,
            col_end: Some(
                25,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 25,
            col_end: Some(
                26,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 26,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "T",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 27,
            col_end: Some(
                28,
            ),
        },
    },
    Token {
        token_type: Id(
            "a",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 29,
            col_end: Some(
                30,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 30,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "T",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 32,
            col_end: Some(
                33,
            ),
        },
    },
    Token {
        token_type: Id(
            "b",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 34,
            col_end: Some(
                35,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 35,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 37,
            col_end: Some(
                44,
            ),
        },
    },
    Token {
        token_type: Id(
            "T",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 45,
            col_end: Some(
                46,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 47,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 49,
            col_end: None,
        },
    },
    Token {
        token_type: If,
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 5,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: Id(
            "a",
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 8,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 10,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Id(
            "b",
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 12,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 16,
            col_end: None,
        },
    },
    Token {
        token_type: Return,
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 9,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: Id(
            "a",
        ),
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 16,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 5,
            row_end: None,
            col_start: 5,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 5,
            row_end: None,
            col_start: 6,
            col_end: None,
        },
    },
    Token {
        token_type: Return,
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 5,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Id(
            "b",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 12,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Class,
        span: Span {
            row_start: 9,
            row_end: Some(
                9,
            ),
            col_start: 1,
            col_end: Some(
                6,
            ),
        },
    },
    Token {
        token_type: Id(
            "Stack",
        ),
        span: Span {
            row_start: 9,
            row_end: Some(
                9,
            ),
            col_start: 7,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 9,
            row_end: Some(
                9,
            ),
            col_start: 12,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: Id(
            "T",
        ),
        span: Span {
            row_start: 9,
            row_end: Some(
                9,
            ),
            col_start: 13,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 9,
            row_end: Some(
                9,
            ),
            col_start: 14,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 9,
            row_end: None,
            col_start: 16,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 9,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "list",
        ),
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 9,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Id(
            "T",
        ),
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 10,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 11,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: Id(
            "items",
        ),
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 13,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "push",
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 10,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "T",
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 15,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: Id(
            "item",
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 17,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 23,
            col_end: Some(
                30,
            ),
        },
    },
    Token {
        token_type: Id(
            "void",
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 31,
            col_end: Some(
                35,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 36,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "items",
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 38,
            col_end: Some(
                43,
            ),
        },
    },
    Token {
        token_type: Dot,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 43,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "append",
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 44,
            col_end: Some(
                50,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 50,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "item",
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 51,
            col_end: Some(
                55,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 55,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 57,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 58,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 5,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "pop",
        ),
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 10,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 12,
            row_end: None,
            col_start: 13,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 12,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 16,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: Id(
            "Optional",
        ),
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 24,
            col_end: Some(
                32,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 32,
            col_end: Some(
                33,
            ),
        },
    },
    Token {
        token_type: Id(
            "T",
        ),
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 33,
            col_end: Some(
                34,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 34,
            col_end: Some(
                35,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 12,
            row_end: None,
            col_start: 36,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 12,
            row_end: None,
            col_start: 37,
            col_end: None,
        },
    },
    Token {
        token_type: If,
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 9,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Id(
            "items",
        ),
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 12,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: Dot,
        span: Span {
            row_start: 13,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "isEmpty",
        ),
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 18,
            col_end: Some(
                25,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 13,
            row_end: None,
            col_start: 25,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 13,
            row_end: None,
            col_start: 26,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 13,
            row_end: None,
            col_start: 28,
            col_end: None,
        },
    },
    Token {
        token_type: Return,
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 30,
            col_end: Some(
                36,
            ),
        },
    },
    Token {
        token_type: Id(
            "None",
        ),
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 37,
            col_end: Some(
                41,
            ),
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 13,
            row_end: None,
            col_start: 42,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 13,
            row_end: None,
            col_start: 43,
            col_end: None,
        },
    },
    Token {
        token_type: Return,
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 9,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: Id(
            "Some",
        ),
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 16,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 14,
            row_end: None,
            col_start: 20,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "items",
        ),
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 21,
            col_end: Some(
                26,
            ),
        },
    },
    Token {
        token_type: Dot,
        span: Span {
            row_start: 14,
            row_end: None,
            col_start: 26,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "removeLast",
        ),
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 27,
            col_end: Some(
                37,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 14,
            row_end: None,
            col_start: 37,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 14,
            row_end: None,
            col_start: 38,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 14,
            row_end: None,
            col_start: 39,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 14,
            row_end: None,
            col_start: 40,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 15,
            row_end: None,
            col_start: 5,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 15,
            row_end: None,
            col_start: 6,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 16,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 16,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 17,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 18,
            row_end: Some(
                18,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "s",
        ),
        span: Span {
            row_start: 18,
            row_end: Some(
                18,
            ),
            col_start: 6,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 18,
            row_end: Some(
                18,
            ),
            col_start: 8,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "Stack",
        ),
        span: Span {
            row_start: 18,
            row_end: Some(
                18,
            ),
            col_start: 10,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 18,
            row_end: Some(
                18,
            ),
            col_start: 15,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 18,
            row_end: Some(
                18,
            ),
            col_start: 16,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 18,
            row_end: Some(
                18,
            ),
            col_start: 19,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: Dot,
        span: Span {
            row_start: 18,
            row_end: None,
            col_start: 20,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "new",
        ),
        span: Span {
            row_start: 18,
            row_end: Some(
                18,
            ),
            col_start: 21,
            col_end: Some(
                24,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 18,
            row_end: None,
            col_start: 24,
            col_end: None,
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 18,
            row_end: None,
            col_start: 25,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 18,
            row_end: None,
            col_start: 26,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "s",
        ),
        span: Span {
            row_start: 19,
            row_end: Some(
                19,
            ),
            col_start: 1,
            col_end: Some(
                2,
            ),
        },
    },
    Token {
        token_type: Dot,
        span: Span {
            row_start: 19,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "push",
        ),
        span: Span {
            row_start: 19,
            row_end: Some(
                19,
            ),
            col_start: 3,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 19,
            row_end: None,
            col_start: 7,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            42,
        ),
        span: Span {
            row_start: 19,
            row_end: Some(
                19,
            ),
            col_start: 8,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 19,
            row_end: None,
            col_start: 10,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 19,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: LineComment(
            "Imports",
        ),
        span: Span {
            row_start: 1,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 1,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: Import,
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 1,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: Id(
            "math",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 8,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 12,
            col_end: None,
        },
    },
    Token {
        token_type: Import,
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 1,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: Id(
            "utils",
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 8,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: Dot,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 13,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "logger",
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 14,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: As,
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 21,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: Underscore,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 24,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 25,
            col_end: None,
        },
    },
    Token {
        token_type: Import,
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 1,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: Id(
            "std",
        ),
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 8,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Dot,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 12,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 5,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "pi",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 6,
            col_end: Some(
                8,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 9,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Id(
            "math",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 11,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: Dot,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 15,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "PI",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 16,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 1,
            col_end: Some(
                6,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 6,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "PI = ",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 7,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: Plus,
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 15,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: Id(
            "pi",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 17,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 19,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 20,
            col_end: None,
        },
    },
    Token {
        token_type: LineComment(
            "Optionals & Results",
        ),
        span: Span {
            row_start: 1,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 1,
            row_end: None,
            col_start: 23,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "divide",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 6,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 12,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 13,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: Id(
            "a",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 17,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 20,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: Id(
            "b",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 24,
            col_end: Some(
                25,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 25,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 27,
            col_end: Some(
                34,
            ),
        },
    },
    Token {
        token_type: Id(
            "Result",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 35,
            col_end: Some(
                41,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 41,
            col_end: Some(
                42,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 42,
            col_end: Some(
                45,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 45,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "string",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 47,
            col_end: Some(
                53,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 53,
            col_end: Some(
                54,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 55,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 56,
            col_end: None,
        },
    },
    Token {
        token_type: If,
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 5,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: Id(
            "b",
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 8,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: EqEq,
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 10,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: Int(
            0,
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 13,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 15,
            col_end: None,
        },
    },
    Token {
        token_type: Return,
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 17,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: Id(
            "Err",
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 24,
            col_end: Some(
                27,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 27,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Division by zero",
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 28,
            col_end: Some(
                46,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 46,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 48,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 49,
            col_end: None,
        },
    },
    Token {
        token_type: Return,
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 5,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Id(
            "Ok",
        ),
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 12,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "a",
        ),
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 15,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: Slash,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "b",
        ),
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 19,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 20,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 5,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 5,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "res",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 6,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 10,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Id(
            "divide",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 12,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            10,
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 19,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            2,
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 23,
            col_end: Some(
                24,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 24,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 25,
            col_end: None,
        },
    },
    Token {
        token_type: Match,
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 1,
            col_end: Some(
                6,
            ),
        },
    },
    Token {
        token_type: Id(
            "res",
        ),
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 7,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 12,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "Ok",
        ),
        span: Span {
            row_start: 9,
            row_end: Some(
                9,
            ),
            col_start: 5,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 9,
            row_end: None,
            col_start: 7,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "v",
        ),
        span: Span {
            row_start: 9,
            row_end: Some(
                9,
            ),
            col_start: 8,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 9,
            row_end: None,
            col_start: 9,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 9,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 9,
            row_end: Some(
                9,
            ),
            col_start: 13,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 9,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Result: ",
        ),
        span: Span {
            row_start: 9,
            row_end: Some(
                9,
            ),
            col_start: 19,
            col_end: Some(
                29,
            ),
        },
    },
    Token {
        token_type: Plus,
        span: Span {
            row_start: 9,
            row_end: Some(
                9,
            ),
            col_start: 30,
            col_end: Some(
                31,
            ),
        },
    },
    Token {
        token_type: Id(
            "v",
        ),
        span: Span {
            row_start: 9,
            row_end: Some(
                9,
            ),
            col_start: 32,
            col_end: Some(
                33,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 9,
            row_end: None,
            col_start: 33,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 9,
            row_end: None,
            col_start: 35,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 9,
            row_end: None,
            col_start: 36,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "Err",
        ),
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 5,
            col_end: Some(
                8,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 8,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "e",
        ),
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 9,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 10,
            col_end: None,
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 12,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 14,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 19,
            col_end: None,
        },
    },
    Token {
        token_type: Str(
            "Error: ",
        ),
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 20,
            col_end: Some(
                29,
            ),
        },
    },
    Token {
        token_type: Plus,
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 30,
            col_end: Some(
                31,
            ),
        },
    },
    Token {
        token_type: Id(
            "e",
        ),
        span: Span {
            row_start: 10,
            row_end: Some(
                10,
            ),
            col_start: 32,
            col_end: Some(
                33,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 33,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 35,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 36,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 12,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "findEven",
        ),
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 6,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 13,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "list",
        ),
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 15,
            col_end: Some(
                19,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 19,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 20,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 23,
            col_end: Some(
                24,
            ),
        },
    },
    Token {
        token_type: Id(
            "nums",
        ),
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 25,
            col_end: Some(
                29,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 13,
            row_end: None,
            col_start: 29,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 31,
            col_end: Some(
                38,
            ),
        },
    },
    Token {
        token_type: Id(
            "Optional",
        ),
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 39,
            col_end: Some(
                47,
            ),
        },
    },
    Token {
        token_type: Lt,
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 47,
            col_end: Some(
                48,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 48,
            col_end: Some(
                51,
            ),
        },
    },
    Token {
        token_type: Gt,
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 51,
            col_end: Some(
                52,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 13,
            row_end: None,
            col_start: 53,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 13,
            row_end: None,
            col_start: 54,
            col_end: None,
        },
    },
    Token {
        token_type: For,
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 5,
            col_end: Some(
                8,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 9,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: Id(
            "n",
        ),
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 13,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: In,
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 15,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: Id(
            "nums",
        ),
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 18,
            col_end: Some(
                22,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 14,
            row_end: None,
            col_start: 23,
            col_end: None,
        },
    },
    Token {
        token_type: If,
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 25,
            col_end: Some(
                27,
            ),
        },
    },
    Token {
        token_type: Id(
            "n",
        ),
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 28,
            col_end: Some(
                29,
            ),
        },
    },
    Token {
        token_type: Percent,
        span: Span {
            row_start: 14,
            row_end: None,
            col_start: 30,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            2,
        ),
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 32,
            col_end: Some(
                33,
            ),
        },
    },
    Token {
        token_type: EqEq,
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 34,
            col_end: Some(
                36,
            ),
        },
    },
    Token {
        token_type: Int(
            0,
        ),
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 37,
            col_end: Some(
                38,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 14,
            row_end: None,
            col_start: 39,
            col_end: None,
        },
    },
    Token {
        token_type: Return,
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 41,
            col_end: Some(
                47,
            ),
        },
    },
    Token {
        token_type: Id(
            "Some",
        ),
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 48,
            col_end: Some(
                52,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 14,
            row_end: None,
            col_start: 52,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "n",
        ),
        span: Span {
            row_start: 14,
            row_end: Some(
                14,
            ),
            col_start: 53,
            col_end: Some(
                54,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 14,
            row_end: None,
            col_start: 54,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 14,
            row_end: None,
            col_start: 56,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 14,
            row_end: None,
            col_start: 58,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 14,
            row_end: None,
            col_start: 59,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 15,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 15,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: Import,
        span: Span {
            row_start: 1,
            row_end: Some(
                1,
            ),
            col_start: 1,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: Id(
            "std",
        ),
        span: Span {
            row_start: 1,
            row_end: Some(
                1,
            ),
            col_start: 8,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Dot,
        span: Span {
            row_start: 1,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 1,
            row_end: Some(
                1,
            ),
            col_start: 12,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 1,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: LineComment(
            "References",
        ),
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 1,
            col_end: Some(
                4,
            ),
        },
    },
    Token {
        token_type: Id(
            "val",
        ),
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 5,
            col_end: Some(
                8,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 9,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Int(
            10,
        ),
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 11,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 13,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 5,
            row_end: Some(
                5,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "r",
        ),
        span: Span {
            row_start: 5,
            row_end: Some(
                5,
            ),
            col_start: 6,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 5,
            row_end: Some(
                5,
            ),
            col_start: 8,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Ref,
        span: Span {
            row_start: 5,
            row_end: Some(
                5,
            ),
            col_start: 10,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Id(
            "val",
        ),
        span: Span {
            row_start: 5,
            row_end: Some(
                5,
            ),
            col_start: 11,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 5,
            row_end: None,
            col_start: 14,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 1,
            col_end: Some(
                6,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 6,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "r",
        ),
        span: Span {
            row_start: 6,
            row_end: Some(
                6,
            ),
            col_start: 7,
            col_end: Some(
                8,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 8,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 9,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "r",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 1,
            col_end: Some(
                2,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 3,
            col_end: Some(
                4,
            ),
        },
    },
    Token {
        token_type: Int(
            20,
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 5,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 7,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 1,
            col_end: Some(
                6,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 6,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "val",
        ),
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 7,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 10,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 9,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: LineComment(
            "References to list elements",
        ),
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 10,
            row_end: None,
            col_start: 31,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "numbers",
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 6,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 14,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: OpenBracket,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 16,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            1,
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 17,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            2,
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 20,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            3,
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 23,
            col_end: Some(
                24,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 24,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            4,
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 26,
            col_end: Some(
                27,
            ),
        },
    },
    Token {
        token_type: Comma,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 27,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            5,
        ),
        span: Span {
            row_start: 11,
            row_end: Some(
                11,
            ),
            col_start: 29,
            col_end: Some(
                30,
            ),
        },
    },
    Token {
        token_type: CloseBracket,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 30,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 11,
            row_end: None,
            col_start: 31,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "first",
        ),
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 6,
            col_end: Some(
                11,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 12,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: Ref,
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 14,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: Id(
            "numbers",
        ),
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 15,
            col_end: Some(
                22,
            ),
        },
    },
    Token {
        token_type: OpenBracket,
        span: Span {
            row_start: 12,
            row_end: None,
            col_start: 22,
            col_end: None,
        },
    },
    Token {
        token_type: Int(
            0,
        ),
        span: Span {
            row_start: 12,
            row_end: Some(
                12,
            ),
            col_start: 23,
            col_end: Some(
                24,
            ),
        },
    },
    Token {
        token_type: CloseBracket,
        span: Span {
            row_start: 12,
            row_end: None,
            col_start: 24,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 12,
            row_end: None,
            col_start: 25,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 1,
            col_end: Some(
                6,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 13,
            row_end: None,
            col_start: 6,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "first",
        ),
        span: Span {
            row_start: 13,
            row_end: Some(
                13,
            ),
            col_start: 7,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 13,
            row_end: None,
            col_start: 12,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 13,
            row_end: None,
            col_start: 13,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 14,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: LineComment(
            "Function taking a reference",
        ),
        span: Span {
            row_start: 15,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 15,
            row_end: None,
            col_start: 31,
            col_end: None,
        },
    },
    Token {
        token_type: Func,
        span: Span {
            row_start: 16,
            row_end: Some(
                16,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "update",
        ),
        span: Span {
            row_start: 16,
            row_end: Some(
                16,
            ),
            col_start: 6,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 16,
            row_end: None,
            col_start: 12,
            col_end: None,
        },
    },
    Token {
        token_type: Ref,
        span: Span {
            row_start: 16,
            row_end: Some(
                16,
            ),
            col_start: 13,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 16,
            row_end: Some(
                16,
            ),
            col_start: 14,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: Id(
            "ref",
        ),
        span: Span {
            row_start: 16,
            row_end: Some(
                16,
            ),
            col_start: 18,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 16,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: Returns,
        span: Span {
            row_start: 16,
            row_end: Some(
                16,
            ),
            col_start: 23,
            col_end: Some(
                30,
            ),
        },
    },
    Token {
        token_type: Id(
            "void",
        ),
        span: Span {
            row_start: 16,
            row_end: Some(
                16,
            ),
            col_start: 31,
            col_end: Some(
                35,
            ),
        },
    },
    Token {
        token_type: OpenBrace,
        span: Span {
            row_start: 16,
            row_end: None,
            col_start: 36,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 16,
            row_end: None,
            col_start: 37,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "ref",
        ),
        span: Span {
            row_start: 17,
            row_end: Some(
                17,
            ),
            col_start: 5,
            col_end: Some(
                8,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 17,
            row_end: Some(
                17,
            ),
            col_start: 9,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Id(
            "ref",
        ),
        span: Span {
            row_start: 17,
            row_end: Some(
                17,
            ),
            col_start: 11,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: Plus,
        span: Span {
            row_start: 17,
            row_end: Some(
                17,
            ),
            col_start: 15,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: Int(
            1,
        ),
        span: Span {
            row_start: 17,
            row_end: Some(
                17,
            ),
            col_start: 17,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 17,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: CloseBrace,
        span: Span {
            row_start: 18,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 18,
            row_end: None,
            col_start: 2,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 19,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "update",
        ),
        span: Span {
            row_start: 20,
            row_end: Some(
                20,
            ),
            col_start: 1,
            col_end: Some(
                7,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 20,
            row_end: None,
            col_start: 7,
            col_end: None,
        },
    },
    Token {
        token_type: Ref,
        span: Span {
            row_start: 20,
            row_end: Some(
                20,
            ),
            col_start: 8,
            col_end: Some(
                9,
            ),
        },
    },
    Token {
        token_type: Id(
            "val",
        ),
        span: Span {
            row_start: 20,
            row_end: Some(
                20,
            ),
            col_start: 9,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 20,
            row_end: None,
            col_start: 12,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 20,
            row_end: None,
            col_start: 13,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "print",
        ),
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 1,
            col_end: Some(
                6,
            ),
        },
    },
    Token {
        token_type: OpenParen,
        span: Span {
            row_start: 21,
            row_end: None,
            col_start: 6,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "val",
        ),
        span: Span {
            row_start: 21,
            row_end: Some(
                21,
            ),
            col_start: 7,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: CloseParen,
        span: Span {
            row_start: 21,
            row_end: None,
            col_start: 10,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 21,
            row_end: None,
            col_start: 11,
            col_end: None,
        },
    },
    Token {
        token_type: LineComment(
            "Variable declarations and type inference",
        ),
        span: Span {
            row_start: 1,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 1,
            row_end: None,
            col_start: 44,
            col_end: None,
        },
    },
    Token {
        token_type: Const,
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 1,
            col_end: Some(
                6,
            ),
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 7,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Id(
            "MAX",
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 11,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 15,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: Int(
            100,
        ),
        span: Span {
            row_start: 2,
            row_end: Some(
                2,
            ),
            col_start: 17,
            col_end: Some(
                20,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 2,
            row_end: None,
            col_start: 20,
            col_end: None,
        },
    },
    Token {
        token_type: Id(
            "int",
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 1,
            col_end: Some(
                4,
            ),
        },
    },
    Token {
        token_type: Id(
            "explicit",
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 5,
            col_end: Some(
                13,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 14,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: Int(
            42,
        ),
        span: Span {
            row_start: 3,
            row_end: Some(
                3,
            ),
            col_start: 16,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 3,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "inferred",
        ),
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 6,
            col_end: Some(
                14,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 15,
            col_end: Some(
                16,
            ),
        },
    },
    Token {
        token_type: Float(
            4.89,
        ),
        span: Span {
            row_start: 4,
            row_end: Some(
                4,
            ),
            col_start: 17,
            col_end: Some(
                21,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 4,
            row_end: None,
            col_start: 21,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 5,
            row_end: Some(
                5,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "name",
        ),
        span: Span {
            row_start: 5,
            row_end: Some(
                5,
            ),
            col_start: 6,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 5,
            row_end: Some(
                5,
            ),
            col_start: 11,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: Str(
            "Mux",
        ),
        span: Span {
            row_start: 5,
            row_end: Some(
                5,
            ),
            col_start: 13,
            col_end: Some(
                18,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 5,
            row_end: None,
            col_start: 18,
            col_end: None,
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 6,
            row_end: None,
            col_start: 1,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "flag",
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 6,
            col_end: Some(
                10,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 11,
            col_end: Some(
                12,
            ),
        },
    },
    Token {
        token_type: Bool(
            true,
        ),
        span: Span {
            row_start: 7,
            row_end: Some(
                7,
            ),
            col_start: 13,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 7,
            row_end: None,
            col_start: 17,
            col_end: None,
        },
    },
    Token {
        token_type: Auto,
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 1,
            col_end: Some(
                5,
            ),
        },
    },
    Token {
        token_type: Id(
            "otherflag",
        ),
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 6,
            col_end: Some(
                15,
            ),
        },
    },
    Token {
        token_type: Eq,
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 16,
            col_end: Some(
                17,
            ),
        },
    },
    Token {
        token_type: Bool(
            false,
        ),
        span: Span {
            row_start: 8,
            row_end: Some(
                8,
            ),
            col_start: 18,
            col_end: Some(
                23,
            ),
        },
    },
    Token {
        token_type: NewLine,
        span: Span {
            row_start: 8,
            row_end: None,
            col_start: 23,
            col_end: None,
        },
    },
]
